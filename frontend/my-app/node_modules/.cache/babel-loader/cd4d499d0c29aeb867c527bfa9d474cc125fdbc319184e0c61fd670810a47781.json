{"ast":null,"code":"import{configureStore}from\"@reduxjs/toolkit\";import storage from\"redux-persist/lib/storage\";// Local storage\nimport{persistStore,persistReducer}from\"redux-persist\";import{combineReducers}from\"redux\";import{thunk}from\"redux-thunk\";// ✅ Fix import\nimport{authReducer}from\"./reducers/authReducer\";// Ensure this exists\nimport{productsReducer}from\"./reducers/productsReducer\";// Ensure this exists\n// Persist Config\nconst persistConfig={key:\"root\",storage};// Combine Reducers\nconst rootReducer=combineReducers({auth:authReducer,products:productsReducer// ✅ Include productsReducer here\n});// Persisted Reducer\nconst persistedReducer=persistReducer(persistConfig,rootReducer);// Create Store\nconst store=configureStore({reducer:persistedReducer,middleware:getDefaultMiddleware=>getDefaultMiddleware({serializableCheck:{ignoredActions:[\"persist/PERSIST\",\"persist/REHYDRATE\"]// ✅ Ignore these actions\n}}).concat(thunk),// ✅ Correct import\ndevTools:process.env.NODE_ENV!==\"production\"});// Create persistor\nexport const persistor=persistStore(store);export default store;","map":{"version":3,"names":["configureStore","storage","persistStore","persistReducer","combineReducers","thunk","authReducer","productsReducer","persistConfig","key","rootReducer","auth","products","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","concat","devTools","process","env","NODE_ENV","persistor"],"sources":["C:/Users/divya/Desktop/Projects/SSBPrep/frontend/my-app/src/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport storage from \"redux-persist/lib/storage\"; // Local storage\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport { combineReducers } from \"redux\";\r\nimport {thunk} from \"redux-thunk\"; // ✅ Fix import\r\n\r\nimport { authReducer } from \"./reducers/authReducer\"; // Ensure this exists\r\nimport { productsReducer } from \"./reducers/productsReducer\"; // Ensure this exists\r\n\r\n// Persist Config\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\n// Combine Reducers\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  products: productsReducer, // ✅ Include productsReducer here\r\n});\r\n\r\n// Persisted Reducer\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n// Create Store\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [\"persist/PERSIST\", \"persist/REHYDRATE\"], // ✅ Ignore these actions\r\n      },\r\n    }).concat(thunk), // ✅ Correct import\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\n\r\n// Create persistor\r\nexport const persistor = persistStore(store);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,OAASA,cAAc,KAAQ,kBAAkB,CACjD,MAAO,CAAAC,OAAO,KAAM,2BAA2B,CAAE;AACjD,OAASC,YAAY,CAAEC,cAAc,KAAQ,eAAe,CAC5D,OAASC,eAAe,KAAQ,OAAO,CACvC,OAAQC,KAAK,KAAO,aAAa,CAAE;AAEnC,OAASC,WAAW,KAAQ,wBAAwB,CAAE;AACtD,OAASC,eAAe,KAAQ,4BAA4B,CAAE;AAE9D;AACA,KAAM,CAAAC,aAAa,CAAG,CACpBC,GAAG,CAAE,MAAM,CACXR,OACF,CAAC,CAED;AACA,KAAM,CAAAS,WAAW,CAAGN,eAAe,CAAC,CAClCO,IAAI,CAAEL,WAAW,CACjBM,QAAQ,CAAEL,eAAiB;AAC7B,CAAC,CAAC,CAEF;AACA,KAAM,CAAAM,gBAAgB,CAAGV,cAAc,CAACK,aAAa,CAAEE,WAAW,CAAC,CAEnE;AACA,KAAM,CAAAI,KAAK,CAAGd,cAAc,CAAC,CAC3Be,OAAO,CAAEF,gBAAgB,CACzBG,UAAU,CAAGC,oBAAoB,EAC/BA,oBAAoB,CAAC,CACnBC,iBAAiB,CAAE,CACjBC,cAAc,CAAE,CAAC,iBAAiB,CAAE,mBAAmB,CAAG;AAC5D,CACF,CAAC,CAAC,CAACC,MAAM,CAACf,KAAK,CAAC,CAAE;AACpBgB,QAAQ,CAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YACrC,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAAC,SAAS,CAAGvB,YAAY,CAACY,KAAK,CAAC,CAE5C,cAAe,CAAAA,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}