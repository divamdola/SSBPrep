{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\Desktop\\\\Projects\\\\SSBPrep\\\\frontend\\\\my-app\\\\src\\\\components\\\\test.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, Fragment, useCallback, useRef } from \"react\";\nimport axiosInstance from \"../utils/axiosInstance\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\";\nimport { getTests } from \"../actions/productActions\";\nimport { submitTest } from \"../actions/productActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  var _location$state, _location$state2, _location$state3, _currentTest$question;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    exam,\n    mockTest,\n    id\n  } = useParams();\n  const {\n    tests,\n    error\n  } = useSelector(state => state.tests);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [currentTest, setCurrentTest] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [isPaused, setIsPaused] = useState(false);\n  const pauseModalRef = useRef(null);\n  const pauseModalInstanceRef = useRef(null);\n  const selectedExam = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.selectedExam) || exam;\n  const selectedMockTest = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.selectedMockTest) || mockTest;\n  const isResume = (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.isResume;\n  const handleSubmit = useCallback(async () => {\n    if (!currentTest || !currentTest.questions) return;\n    const payload = {\n      testId: currentTest._id,\n      answers: currentTest.questions.map((q, idx) => ({\n        question: q.question,\n        selectedOption: answers[idx] || null\n      })),\n      timeTaken: currentTest.timeDuration * 60 - timeLeft\n    };\n    try {\n      await dispatch(submitTest(payload));\n      alert(\"✅ Test submitted!\");\n      localStorage.removeItem(\"pausedTest\");\n      navigate(`/${selectedExam}/${selectedMockTest}/test/result/${currentTest._id}`);\n    } catch (error) {\n      console.error(\"❌ Error submitting test:\", error);\n      alert(\"❌ Something went wrong while submitting the test.\");\n    }\n  }, [answers, currentTest, timeLeft, dispatch, navigate, selectedExam, selectedMockTest]);\n  useEffect(() => {\n    if (exam) {\n      dispatch(getTests(exam));\n    }\n  }, [dispatch, exam]);\n  useEffect(() => {\n    const test = tests.find(t => t._id === id);\n    if (test) {\n      setCurrentTest(test);\n\n      // Resume time if test was paused\n      const paused = JSON.parse(localStorage.getItem(\"pausedTest\"));\n      if (isResume && paused !== null && paused !== void 0 && paused.timeLeft) {\n        setTimeLeft(paused.timeLeft);\n        setAnswers(paused.answers || {});\n        setCurrentQuestionIndex(paused.currentQuestionIndex || 0);\n      } else {\n        setTimeLeft(test.timeDuration * 60);\n      }\n\n      // Enter fullscreen\n      const elem = document.documentElement;\n      if (!document.fullscreenElement) {\n        elem.requestFullscreen().catch(err => console.error(\"Failed to enter full screen:\", err));\n      }\n    }\n  }, [tests, id, isResume]);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      var _window$bootstrap;\n      if (pauseModalRef.current && (_window$bootstrap = window.bootstrap) !== null && _window$bootstrap !== void 0 && _window$bootstrap.Modal) {\n        pauseModalInstanceRef.current = new window.bootstrap.Modal(pauseModalRef.current, {\n          backdrop: \"static\",\n          keyboard: false\n        });\n      }\n    }, 200);\n    return () => clearTimeout(timer);\n  }, []);\n  useEffect(() => {\n    const handleFullscreenChange = () => {\n      if (!document.fullscreenElement) {\n        var _pauseModalInstanceRe;\n        setIsPaused(true);\n\n        // Save pause state to localStorage\n        localStorage.setItem(\"pausedTest\", JSON.stringify({\n          testId: currentTest._id,\n          exam,\n          mockTest: window.location.pathname.split(\"/\")[2],\n          timeLeft,\n          answers,\n          currentQuestionIndex\n        }));\n        (_pauseModalInstanceRe = pauseModalInstanceRef.current) === null || _pauseModalInstanceRe === void 0 ? void 0 : _pauseModalInstanceRe.show();\n      }\n    };\n    document.addEventListener(\"fullscreenchange\", handleFullscreenChange);\n    return () => {\n      document.removeEventListener(\"fullscreenchange\", handleFullscreenChange);\n    };\n  }, [timeLeft, answers, currentQuestionIndex, currentTest, exam]);\n  useEffect(() => {\n    if (timeLeft <= 0) {\n      handleSubmit();\n      return;\n    }\n    if (isPaused) return;\n    const timer = setInterval(() => {\n      setTimeLeft(prev => prev - 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft, isPaused, handleSubmit]);\n  const formatTime = seconds => {\n    const h = String(Math.floor(seconds / 3600)).padStart(2, \"0\");\n    const m = String(Math.floor(seconds % 3600 / 60)).padStart(2, \"0\");\n    const s = String(seconds % 60).padStart(2, \"0\");\n    return `${h}:${m}:${s}`;\n  };\n  const handleOptionChange = e => {\n    setAnswers({\n      ...answers,\n      [currentQuestionIndex]: e.target.value\n    });\n  };\n  const handleNext = () => {\n    if (currentQuestionIndex < currentTest.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const handlePrevious = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n  const toggleFullScreen = () => {\n    const elem = document.documentElement;\n    if (!document.fullscreenElement) {\n      elem.requestFullscreen().catch(err => console.error(err));\n    } else {\n      document.exitFullscreen();\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: [\"\\u274C Failed to load test: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 12\n    }, this);\n  }\n  if (!currentTest || !((_currentTest$question = currentTest.questions) !== null && _currentTest$question !== void 0 && _currentTest$question.length)) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading test...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 12\n    }, this);\n  }\n  const question = currentTest.questions[currentQuestionIndex];\n  const selected = answers[currentQuestionIndex] || \"\";\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-body\",\n      children: [isPaused && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resume-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resume-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"resume-text\",\n            children: \"You have paused the test. Resume to continue.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"resume-btn\",\n            onClick: () => {\n              setIsPaused(false);\n              const elem = document.documentElement;\n              if (!document.fullscreenElement) {\n                elem.requestFullscreen().catch(err => console.error(\"Failed to re-enter full screen:\", err));\n              }\n            },\n            children: \"Resume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-head\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-name\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: currentTest.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeleft\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Time left \", formatTime(timeLeft)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"full-button\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"pause-btn\",\n            onClick: e => {\n              var _pauseModalInstanceRe2;\n              e.preventDefault();\n              (_pauseModalInstanceRe2 = pauseModalInstanceRef.current) === null || _pauseModalInstanceRe2 === void 0 ? void 0 : _pauseModalInstanceRe2.show();\n            },\n            children: \"Pause\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"full-btn\",\n            onClick: toggleFullScreen,\n            children: \"Enter Full Screen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ques\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Question No. \", currentQuestionIndex + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-marks\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"correct\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Correct\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"+\", currentTest.marksCorrect]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"incorrect\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Incorrect\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"-\", currentTest.marksWrong]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-question\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: question.questionText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test-options\",\n            children: question.options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: `question-${currentQuestionIndex}`,\n                  value: option,\n                  checked: selected === option,\n                  onChange: handleOptionChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: option\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-submit\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-save\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePrevious,\n            disabled: currentQuestionIndex === 0,\n            children: \"Previous Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNext,\n            disabled: currentQuestionIndex === currentTest.questions.length - 1,\n            children: \"Save & Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-save\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-btn btn btn-success\",\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade\",\n      id: \"pauseConfirmModal\",\n      tabIndex: \"-1\",\n      \"aria-labelledby\": \"pauseConfirmModalLabel\",\n      \"aria-hidden\": \"true\",\n      ref: pauseModalRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog modal-dialog-centered\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header bg-dark text-dark\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title text-white\",\n              id: \"pauseConfirmModalLabel\",\n              children: \"Pause Test?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close\",\n              style: {\n                filter: \"invert(1)\",\n                opacity: 1\n              },\n              \"data-bs-dismiss\": \"modal\",\n              \"aria-label\": \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: \"Are you sure you want to pause the test? Timer will stop and questions will be hidden.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-light\",\n              \"data-bs-dismiss\": \"modal\",\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-dark\",\n              onClick: () => {\n                var _pauseModalInstanceRe3;\n                setIsPaused(true);\n                (_pauseModalInstanceRe3 = pauseModalInstanceRef.current) === null || _pauseModalInstanceRe3 === void 0 ? void 0 : _pauseModalInstanceRe3.hide();\n                if (document.fullscreenElement) {\n                  document.exitFullscreen();\n                }\n              },\n              children: \"Yes, Pause\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"99wKNWjhVCGIfWZ7ZW4uUSHOPmw=\", false, function () {\n  return [useDispatch, useNavigate, useLocation, useParams, useSelector];\n});\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useEffect","useState","Fragment","useCallback","useRef","axiosInstance","useDispatch","useSelector","useNavigate","useParams","useLocation","getTests","submitTest","jsxDEV","_jsxDEV","Test","_s","_location$state","_location$state2","_location$state3","_currentTest$question","dispatch","navigate","location","exam","mockTest","id","tests","error","state","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","currentTest","setCurrentTest","timeLeft","setTimeLeft","isPaused","setIsPaused","pauseModalRef","pauseModalInstanceRef","selectedExam","selectedMockTest","isResume","handleSubmit","questions","payload","testId","_id","map","q","idx","question","selectedOption","timeTaken","timeDuration","alert","localStorage","removeItem","console","test","find","t","paused","JSON","parse","getItem","elem","document","documentElement","fullscreenElement","requestFullscreen","catch","err","timer","setTimeout","_window$bootstrap","current","window","bootstrap","Modal","backdrop","keyboard","clearTimeout","handleFullscreenChange","_pauseModalInstanceRe","setItem","stringify","pathname","split","show","addEventListener","removeEventListener","setInterval","prev","clearInterval","formatTime","seconds","h","String","Math","floor","padStart","m","s","handleOptionChange","e","target","value","handleNext","length","handlePrevious","toggleFullScreen","exitFullscreen","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","selected","className","onClick","title","_pauseModalInstanceRe2","preventDefault","marksCorrect","marksWrong","questionText","options","option","type","name","checked","onChange","disabled","tabIndex","ref","filter","opacity","_pauseModalInstanceRe3","hide","_c","$RefreshReg$"],"sources":["C:/Users/divya/Desktop/Projects/SSBPrep/frontend/my-app/src/components/test.js"],"sourcesContent":["import React, {\r\n  useEffect,\r\n  useState,\r\n  Fragment,\r\n  useCallback,\r\n  useRef,\r\n} from \"react\";\r\nimport axiosInstance from \"../utils/axiosInstance\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\";\r\nimport { getTests } from \"../actions/productActions\";\r\nimport { submitTest } from \"../actions/productActions\";\r\n\r\nconst Test = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { exam, mockTest, id } = useParams();\r\n\r\n  const { tests, error } = useSelector((state) => state.tests);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [answers, setAnswers] = useState({});\r\n  const [currentTest, setCurrentTest] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(0);\r\n  const [isPaused, setIsPaused] = useState(false);\r\n\r\n  const pauseModalRef = useRef(null);\r\n  const pauseModalInstanceRef = useRef(null);\r\n\r\n  const selectedExam = location.state?.selectedExam || exam;\r\n  const selectedMockTest = location.state?.selectedMockTest || mockTest;\r\n  const isResume = location.state?.isResume;\r\n\r\n  const handleSubmit = useCallback(async () => {\r\n    if (!currentTest || !currentTest.questions) return;\r\n\r\n    const payload = {\r\n      testId: currentTest._id,\r\n      answers: currentTest.questions.map((q, idx) => ({\r\n        question: q.question,\r\n        selectedOption: answers[idx] || null,\r\n      })),\r\n      timeTaken: currentTest.timeDuration * 60 - timeLeft,\r\n    };\r\n\r\n    try {\r\n      await dispatch(submitTest(payload));\r\n\r\n      alert(\"✅ Test submitted!\");\r\n      localStorage.removeItem(\"pausedTest\");\r\n\r\n      navigate(\r\n        `/${selectedExam}/${selectedMockTest}/test/result/${currentTest._id}`\r\n      );\r\n    } catch (error) {\r\n      console.error(\"❌ Error submitting test:\", error);\r\n      alert(\"❌ Something went wrong while submitting the test.\");\r\n    }\r\n  }, [\r\n    answers,\r\n    currentTest,\r\n    timeLeft,\r\n    dispatch,\r\n    navigate,\r\n    selectedExam,\r\n    selectedMockTest,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (exam) {\r\n      dispatch(getTests(exam));\r\n    }\r\n  }, [dispatch, exam]);\r\n\r\n  useEffect(() => {\r\n    const test = tests.find((t) => t._id === id);\r\n    if (test) {\r\n      setCurrentTest(test);\r\n\r\n      // Resume time if test was paused\r\n      const paused = JSON.parse(localStorage.getItem(\"pausedTest\"));\r\n      if (isResume && paused?.timeLeft) {\r\n        setTimeLeft(paused.timeLeft);\r\n        setAnswers(paused.answers || {});\r\n        setCurrentQuestionIndex(paused.currentQuestionIndex || 0);\r\n      } else {\r\n        setTimeLeft(test.timeDuration * 60);\r\n      }\r\n\r\n      // Enter fullscreen\r\n      const elem = document.documentElement;\r\n      if (!document.fullscreenElement) {\r\n        elem\r\n          .requestFullscreen()\r\n          .catch((err) => console.error(\"Failed to enter full screen:\", err));\r\n      }\r\n    }\r\n  }, [tests, id, isResume]);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      if (pauseModalRef.current && window.bootstrap?.Modal) {\r\n        pauseModalInstanceRef.current = new window.bootstrap.Modal(\r\n          pauseModalRef.current,\r\n          {\r\n            backdrop: \"static\",\r\n            keyboard: false,\r\n          }\r\n        );\r\n      }\r\n    }, 200);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleFullscreenChange = () => {\r\n      if (!document.fullscreenElement) {\r\n        setIsPaused(true);\r\n\r\n        // Save pause state to localStorage\r\n        localStorage.setItem(\r\n          \"pausedTest\",\r\n          JSON.stringify({\r\n            testId: currentTest._id,\r\n            exam,\r\n            mockTest: window.location.pathname.split(\"/\")[2],\r\n            timeLeft,\r\n            answers,\r\n            currentQuestionIndex,\r\n          })\r\n        );\r\n\r\n        pauseModalInstanceRef.current?.show();\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"fullscreenchange\", handleFullscreenChange);\r\n    return () => {\r\n      document.removeEventListener(\"fullscreenchange\", handleFullscreenChange);\r\n    };\r\n  }, [timeLeft, answers, currentQuestionIndex, currentTest, exam]);\r\n\r\n  useEffect(() => {\r\n    if (timeLeft <= 0) {\r\n      handleSubmit();\r\n      return;\r\n    }\r\n\r\n    if (isPaused) return;\r\n\r\n    const timer = setInterval(() => {\r\n      setTimeLeft((prev) => prev - 1);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [timeLeft, isPaused, handleSubmit]);\r\n\r\n  const formatTime = (seconds) => {\r\n    const h = String(Math.floor(seconds / 3600)).padStart(2, \"0\");\r\n    const m = String(Math.floor((seconds % 3600) / 60)).padStart(2, \"0\");\r\n    const s = String(seconds % 60).padStart(2, \"0\");\r\n    return `${h}:${m}:${s}`;\r\n  };\r\n\r\n  const handleOptionChange = (e) => {\r\n    setAnswers({\r\n      ...answers,\r\n      [currentQuestionIndex]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (currentQuestionIndex < currentTest.questions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (currentQuestionIndex > 0) {\r\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\r\n    }\r\n  };\r\n\r\n  const toggleFullScreen = () => {\r\n    const elem = document.documentElement;\r\n    if (!document.fullscreenElement) {\r\n      elem.requestFullscreen().catch((err) => console.error(err));\r\n    } else {\r\n      document.exitFullscreen();\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    return <p style={{ color: \"red\" }}>❌ Failed to load test: {error}</p>;\r\n  }\r\n\r\n  if (!currentTest || !currentTest.questions?.length) {\r\n    return <p>Loading test...</p>;\r\n  }\r\n\r\n  const question = currentTest.questions[currentQuestionIndex];\r\n  const selected = answers[currentQuestionIndex] || \"\";\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"test-body\">\r\n        {isPaused && (\r\n          <div className=\"resume-container\">\r\n            <div className=\"resume-content\">\r\n              <p className=\"resume-text\">\r\n                You have paused the test. Resume to continue.\r\n              </p>\r\n              <button\r\n                className=\"resume-btn\"\r\n                onClick={() => {\r\n                  setIsPaused(false);\r\n                  const elem = document.documentElement;\r\n                  if (!document.fullscreenElement) {\r\n                    elem\r\n                      .requestFullscreen()\r\n                      .catch((err) =>\r\n                        console.error(\"Failed to re-enter full screen:\", err)\r\n                      );\r\n                  }\r\n                }}\r\n              >\r\n                Resume\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"test-head\">\r\n          <div className=\"test-name\">\r\n            <p>{currentTest.title}</p>\r\n          </div>\r\n          <div className=\"timeleft\">\r\n            <p>Time left {formatTime(timeLeft)}</p>\r\n          </div>\r\n          <div className=\"full-button\">\r\n            <button\r\n              className=\"pause-btn\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                pauseModalInstanceRef.current?.show();\r\n              }}\r\n            >\r\n              Pause\r\n            </button>\r\n\r\n            <button className=\"full-btn\" onClick={toggleFullScreen}>\r\n              Enter Full Screen\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"test-content\">\r\n          <div className=\"test-section\">\r\n            <div className=\"ques\">\r\n              <p>Question No. {currentQuestionIndex + 1}</p>\r\n            </div>\r\n            <div className=\"section-marks\">\r\n              <div className=\"correct\">\r\n                <p>Correct</p>\r\n                <p>+{currentTest.marksCorrect}</p>\r\n              </div>\r\n              <div className=\"incorrect\">\r\n                <p>Incorrect</p>\r\n                <p>-{currentTest.marksWrong}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"test-question\">\r\n            <div className=\"question\">\r\n              <p>{question.questionText}</p>\r\n            </div>\r\n            <div className=\"test-options\">\r\n              {question.options.map((option, idx) => (\r\n                <div key={idx}>\r\n                  <label>\r\n                    <input\r\n                      type=\"radio\"\r\n                      name={`question-${currentQuestionIndex}`}\r\n                      value={option}\r\n                      checked={selected === option}\r\n                      onChange={handleOptionChange}\r\n                    />\r\n                    <span>{option}</span>\r\n                  </label>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"test-submit\">\r\n          <div className=\"test-save\">\r\n            <button\r\n              onClick={handlePrevious}\r\n              disabled={currentQuestionIndex === 0}\r\n            >\r\n              Previous Question\r\n            </button>\r\n            <button\r\n              onClick={handleNext}\r\n              disabled={\r\n                currentQuestionIndex === currentTest.questions.length - 1\r\n              }\r\n            >\r\n              Save & Next\r\n            </button>\r\n          </div>\r\n          <div className=\"test-save\">\r\n            <button\r\n              className=\"submit-btn btn btn-success\"\r\n              onClick={handleSubmit}\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Pause Modal */}\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"pauseConfirmModal\"\r\n        tabIndex=\"-1\"\r\n        aria-labelledby=\"pauseConfirmModalLabel\"\r\n        aria-hidden=\"true\"\r\n        ref={pauseModalRef}\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header bg-dark text-dark\">\r\n              <h5\r\n                className=\"modal-title text-white\"\r\n                id=\"pauseConfirmModalLabel\"\r\n              >\r\n                Pause Test?\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                style={{ filter: \"invert(1)\", opacity: 1 }}\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              />\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              Are you sure you want to pause the test? Timer will stop and\r\n              questions will be hidden.\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light\"\r\n                data-bs-dismiss=\"modal\"\r\n              >\r\n                No\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-dark\"\r\n                onClick={() => {\r\n                  setIsPaused(true);\r\n                  pauseModalInstanceRef.current?.hide();\r\n                  if (document.fullscreenElement) {\r\n                    document.exitFullscreen();\r\n                  }\r\n                }}\r\n              >\r\n                Yes, Pause\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}