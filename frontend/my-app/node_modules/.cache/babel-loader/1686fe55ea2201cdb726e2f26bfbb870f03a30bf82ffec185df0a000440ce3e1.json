{"ast":null,"code":"import axiosInstance from \"../utils/axiosInstance\";\nimport { ALL_PRODUCTS_REQUEST, ALL_PRODUCTS_SUCCESS, ALL_PRODUCTS_FAIL, CLEAR_ERRORS, TEST_REQUEST, TEST_SUCCESS, TEST_FAIL } from \"../constants/productConstants\";\nexport const getProducts = category => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_PRODUCTS_REQUEST\n    });\n    const {\n      data\n    } = await axiosInstance.get(`/products?category=${category}`);\n    console.log(\"API Response:\", data); // Debugging\n\n    dispatch({\n      type: ALL_PRODUCTS_SUCCESS,\n      payload: data.booksByCategory[category] || [] // ✅ Use the correct field\n    });\n  } catch (error) {\n    var _error$response, _error$response$data;\n    dispatch({\n      type: ALL_PRODUCTS_FAIL,\n      payload: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error fetching products\"\n    });\n  }\n};\n\n// Get All Test\nexport const getTests = category => async dispatch => {\n  try {\n    dispatch({\n      type: TEST_REQUEST\n    });\n    const token = localStorage.getItem(\"token\");\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}` // ✅ Add token to header\n      }\n    };\n    const {\n      data\n    } = await axiosInstance.get(`/test?category=${category}`, config);\n    console.log(\"API Response:\", data); // Debugging\n\n    dispatch({\n      type: TEST_SUCCESS,\n      payload: data.groupedTests[category] || []\n    });\n  } catch (error) {\n    var _error$response2, _error$response3, _error$response3$data;\n    console.error(\"❌ Load Test Failed:\", (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n    dispatch({\n      type: TEST_FAIL,\n      payload: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Error fetching tests\"\n    });\n  }\n};\n\n// Clear Errors\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["axiosInstance","ALL_PRODUCTS_REQUEST","ALL_PRODUCTS_SUCCESS","ALL_PRODUCTS_FAIL","CLEAR_ERRORS","TEST_REQUEST","TEST_SUCCESS","TEST_FAIL","getProducts","category","dispatch","type","data","get","console","log","payload","booksByCategory","error","_error$response","_error$response$data","response","message","getTests","token","localStorage","getItem","config","headers","Authorization","groupedTests","_error$response2","_error$response3","_error$response3$data","clearErrors"],"sources":["C:/Users/divya/Desktop/Projects/SSBPrep/frontend/my-app/src/actions/productActions.js"],"sourcesContent":["import axiosInstance from \"../utils/axiosInstance\";\r\nimport {\r\n    ALL_PRODUCTS_REQUEST,\r\n    ALL_PRODUCTS_SUCCESS,\r\n    ALL_PRODUCTS_FAIL,\r\n    CLEAR_ERRORS,\r\n    TEST_REQUEST,\r\n    TEST_SUCCESS,\r\n    TEST_FAIL,\r\n} from \"../constants/productConstants\";\r\n\r\nexport const getProducts = (category) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ALL_PRODUCTS_REQUEST });\r\n\r\n    const { data } = await axiosInstance.get(`/products?category=${category}`);\r\n\r\n    console.log(\"API Response:\", data); // Debugging\r\n\r\n    dispatch({\r\n      type: ALL_PRODUCTS_SUCCESS,\r\n      payload: data.booksByCategory[category] || [], // ✅ Use the correct field\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ALL_PRODUCTS_FAIL,\r\n      payload: error.response?.data?.message || \"Error fetching products\",\r\n    });\r\n  }\r\n};\r\n\r\n\r\n// Get All Test\r\nexport const getTests = (category) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TEST_REQUEST });\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`, // ✅ Add token to header\r\n      },\r\n    };\r\n\r\n    const { data } = await axiosInstance.get(`/test?category=${category}`, config);\r\n\r\n    console.log(\"API Response:\", data); // Debugging\r\n\r\n    dispatch({\r\n      type: TEST_SUCCESS,\r\n      payload: data.groupedTests[category] || [],\r\n    });\r\n  } catch (error) {\r\n    console.error(\"❌ Load Test Failed:\", error.response?.data);\r\n    dispatch({\r\n      type: TEST_FAIL,\r\n      payload: error.response?.data?.message || \"Error fetching tests\",\r\n    });\r\n  }\r\n};\r\n\r\n// Clear Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS,\r\n    });\r\n};\r\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,wBAAwB;AAClD,SACIC,oBAAoB,EACpBC,oBAAoB,EACpBC,iBAAiB,EACjBC,YAAY,EACZC,YAAY,EACZC,YAAY,EACZC,SAAS,QACN,+BAA+B;AAEtC,OAAO,MAAMC,WAAW,GAAIC,QAAQ,IAAK,MAAOC,QAAQ,IAAK;EAC3D,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEV;IAAqB,CAAC,CAAC;IAExC,MAAM;MAAEW;IAAK,CAAC,GAAG,MAAMZ,aAAa,CAACa,GAAG,CAAC,sBAAsBJ,QAAQ,EAAE,CAAC;IAE1EK,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,IAAI,CAAC,CAAC,CAAC;;IAEpCF,QAAQ,CAAC;MACPC,IAAI,EAAET,oBAAoB;MAC1Bc,OAAO,EAAEJ,IAAI,CAACK,eAAe,CAACR,QAAQ,CAAC,IAAI,EAAE,CAAE;IACjD,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACdV,QAAQ,CAAC;MACPC,IAAI,EAAER,iBAAiB;MACvBa,OAAO,EAAE,EAAAG,eAAA,GAAAD,KAAK,CAACG,QAAQ,cAAAF,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBP,IAAI,cAAAQ,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAAI;IAC5C,CAAC,CAAC;EACJ;AACF,CAAC;;AAGD;AACA,OAAO,MAAMC,QAAQ,GAAId,QAAQ,IAAK,MAAOC,QAAQ,IAAK;EACxD,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEN;IAAa,CAAC,CAAC;IAEhC,MAAMmB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,MAAMC,MAAM,GAAG;MACbC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUL,KAAK,EAAE,CAAE;MACpC;IACF,CAAC;IAED,MAAM;MAAEZ;IAAK,CAAC,GAAG,MAAMZ,aAAa,CAACa,GAAG,CAAC,kBAAkBJ,QAAQ,EAAE,EAAEkB,MAAM,CAAC;IAE9Eb,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,IAAI,CAAC,CAAC,CAAC;;IAEpCF,QAAQ,CAAC;MACPC,IAAI,EAAEL,YAAY;MAClBU,OAAO,EAAEJ,IAAI,CAACkB,YAAY,CAACrB,QAAQ,CAAC,IAAI;IAC1C,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;IAAA,IAAAa,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA;IACdnB,OAAO,CAACI,KAAK,CAAC,qBAAqB,GAAAa,gBAAA,GAAEb,KAAK,CAACG,QAAQ,cAAAU,gBAAA,uBAAdA,gBAAA,CAAgBnB,IAAI,CAAC;IAC1DF,QAAQ,CAAC;MACPC,IAAI,EAAEJ,SAAS;MACfS,OAAO,EAAE,EAAAgB,gBAAA,GAAAd,KAAK,CAACG,QAAQ,cAAAW,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBpB,IAAI,cAAAqB,qBAAA,uBAApBA,qBAAA,CAAsBX,OAAO,KAAI;IAC5C,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMY,WAAW,GAAGA,CAAA,KAAM,MAAOxB,QAAQ,IAAK;EACjDA,QAAQ,CAAC;IACLC,IAAI,EAAEP;EACV,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}