{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { combineReducers } from \"redux\";\nimport { thunk } from \"redux-thunk\";\nimport { authReducer, forgotPasswordReducer } from \"./reducers/userReducer\";\nimport { productsReducer } from \"./reducers/productsReducer\";\nimport { testReducer } from \"./reducers/testReducer\";\nimport { adminReducer } from \"./reducers/adminReducer\";\n\n// Persist Config\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\n\n// Combine Reducers\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  products: productsReducer,\n  tests: testReducer,\n  forgotPassword: forgotPasswordReducer,\n  resetPassword: forgotPasswordReducer,\n  admin: adminReducer\n});\n\n// Persisted Reducer\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// Create Store\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [\"persist/PERSIST\", \"persist/REHYDRATE\"] // ✅ Ignore these actions\n    }\n  }).concat(thunk),\n  // ✅ Correct import\n  devTools: process.env.NODE_ENV !== \"production\"\n});\n\n// Create persistor\nexport const persistor = persistStore(store);\nexport default store;","map":{"version":3,"names":["configureStore","storage","persistStore","persistReducer","combineReducers","thunk","authReducer","forgotPasswordReducer","productsReducer","testReducer","adminReducer","persistConfig","key","rootReducer","auth","products","tests","forgotPassword","resetPassword","admin","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","concat","devTools","process","env","NODE_ENV","persistor"],"sources":["C:/Users/divya/Desktop/Projects/SSBPrep/frontend/my-app/src/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport { combineReducers } from \"redux\";\r\nimport {thunk} from \"redux-thunk\";\r\n\r\nimport { authReducer, forgotPasswordReducer } from \"./reducers/userReducer\";\r\nimport { productsReducer } from \"./reducers/productsReducer\";\r\nimport { testReducer } from \"./reducers/testReducer\";\r\nimport {adminReducer} from \"./reducers/adminReducer\";\r\n\r\n// Persist Config\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\n// Combine Reducers\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  products: productsReducer,\r\n  tests:testReducer,\r\n  forgotPassword: forgotPasswordReducer,\r\n  resetPassword: forgotPasswordReducer,\r\n  admin: adminReducer,\r\n});\r\n\r\n// Persisted Reducer\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n// Create Store\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [\"persist/PERSIST\", \"persist/REHYDRATE\"], // ✅ Ignore these actions\r\n      },\r\n    }).concat(thunk), // ✅ Correct import\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\n\r\n// Create persistor\r\nexport const persistor = persistStore(store);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,SAASC,eAAe,QAAQ,OAAO;AACvC,SAAQC,KAAK,QAAO,aAAa;AAEjC,SAASC,WAAW,EAAEC,qBAAqB,QAAQ,wBAAwB;AAC3E,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAAQC,YAAY,QAAO,yBAAyB;;AAEpD;AACA,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXX;AACF,CAAC;;AAED;AACA,MAAMY,WAAW,GAAGT,eAAe,CAAC;EAClCU,IAAI,EAAER,WAAW;EACjBS,QAAQ,EAAEP,eAAe;EACzBQ,KAAK,EAACP,WAAW;EACjBQ,cAAc,EAAEV,qBAAqB;EACrCW,aAAa,EAAEX,qBAAqB;EACpCY,KAAK,EAAET;AACT,CAAC,CAAC;;AAEF;AACA,MAAMU,gBAAgB,GAAGjB,cAAc,CAACQ,aAAa,EAAEE,WAAW,CAAC;;AAEnE;AACA,MAAMQ,KAAK,GAAGrB,cAAc,CAAC;EAC3BsB,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAAC,iBAAiB,EAAE,mBAAmB,CAAC,CAAE;IAC5D;EACF,CAAC,CAAC,CAACC,MAAM,CAACtB,KAAK,CAAC;EAAE;EACpBuB,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK;AACrC,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,SAAS,GAAG9B,YAAY,CAACmB,KAAK,CAAC;AAE5C,eAAeA,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}