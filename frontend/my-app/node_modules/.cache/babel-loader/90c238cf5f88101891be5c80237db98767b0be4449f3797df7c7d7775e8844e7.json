{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\Desktop\\\\Projects\\\\SSBPrep\\\\frontend\\\\my-app\\\\src\\\\components\\\\mockList.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MockList = () => {\n  _s();\n  var _location$state, _location$state2;\n  const location = useLocation();\n  const {\n    exam,\n    mockTest\n  } = useParams();\n\n  // Fallbacks in case user refreshed and state is lost\n  const selectedExam = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.selectedExam) || exam;\n  const selectedMockTest = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.selectedMockTest) || mockTest;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"head-home\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: selectedMockTest === \"DPP\" || selectedMockTest.toLowerCase() === \"dpp\" ? `${selectedExam} - Daily Practice Papers` : `${selectedExam} - Full Mock Tests`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), selectedMockTest.toLowerCase() === \"dpp\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mock-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Here are your DPPs for \", selectedExam]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mock-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Here are your Full Mock Tests for \", selectedExam]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(MockList, \"OpqQcWyBORZrGhsEBn6rWP+4dFA=\", false, function () {\n  return [useLocation, useParams];\n});\n_c = MockList;\nexport default MockList;\nvar _c;\n$RefreshReg$(_c, \"MockList\");","map":{"version":3,"names":["React","Fragment","useLocation","useParams","jsxDEV","_jsxDEV","MockList","_s","_location$state","_location$state2","location","exam","mockTest","selectedExam","state","selectedMockTest","children","className","toLowerCase","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/divya/Desktop/Projects/SSBPrep/frontend/my-app/src/components/mockList.js"],"sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\n\r\nconst MockList = () => {\r\n  const location = useLocation();\r\n  const { exam, mockTest } = useParams();\r\n\r\n  // Fallbacks in case user refreshed and state is lost\r\n  const selectedExam = location.state?.selectedExam || exam;\r\n  const selectedMockTest = location.state?.selectedMockTest || mockTest;\r\n\r\n  return (\r\n    <Fragment>\r\n        <div className=\"head-home\">\r\n        <h1>\r\n        {selectedMockTest === \"DPP\" || selectedMockTest.toLowerCase() === \"dpp\"\r\n          ? `${selectedExam} - Daily Practice Papers`\r\n          : `${selectedExam} - Full Mock Tests`}\r\n      </h1>\r\n        </div>\r\n\r\n      {selectedMockTest.toLowerCase() === \"dpp\" ? (\r\n        <div className=\"mock-container\">\r\n          <p>Here are your DPPs for {selectedExam}</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"mock-container\">\r\n          <p>Here are your Full Mock Tests for {selectedExam}</p>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MockList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,eAAA,EAAAC,gBAAA;EACrB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAES,IAAI;IAAEC;EAAS,CAAC,GAAGT,SAAS,CAAC,CAAC;;EAEtC;EACA,MAAMU,YAAY,GAAG,EAAAL,eAAA,GAAAE,QAAQ,CAACI,KAAK,cAAAN,eAAA,uBAAdA,eAAA,CAAgBK,YAAY,KAAIF,IAAI;EACzD,MAAMI,gBAAgB,GAAG,EAAAN,gBAAA,GAAAC,QAAQ,CAACI,KAAK,cAAAL,gBAAA,uBAAdA,gBAAA,CAAgBM,gBAAgB,KAAIH,QAAQ;EAErE,oBACEP,OAAA,CAACJ,QAAQ;IAAAe,QAAA,gBACLX,OAAA;MAAKY,SAAS,EAAC,WAAW;MAAAD,QAAA,eAC1BX,OAAA;QAAAW,QAAA,EACCD,gBAAgB,KAAK,KAAK,IAAIA,gBAAgB,CAACG,WAAW,CAAC,CAAC,KAAK,KAAK,GACnE,GAAGL,YAAY,0BAA0B,GACzC,GAAGA,YAAY;MAAoB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAEPP,gBAAgB,CAACG,WAAW,CAAC,CAAC,KAAK,KAAK,gBACvCb,OAAA;MAAKY,SAAS,EAAC,gBAAgB;MAAAD,QAAA,eAC7BX,OAAA;QAAAW,QAAA,GAAG,yBAAuB,EAACH,YAAY;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,gBAENjB,OAAA;MAAKY,SAAS,EAAC,gBAAgB;MAAAD,QAAA,eAC7BX,OAAA;QAAAW,QAAA,GAAG,oCAAkC,EAACH,YAAY;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEf,CAAC;AAACf,EAAA,CA7BID,QAAQ;EAAA,QACKJ,WAAW,EACDC,SAAS;AAAA;AAAAoB,EAAA,GAFhCjB,QAAQ;AA+Bd,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}