{"ast":null,"code":"import { TEST_REQUEST, TEST_SUCCESS, TEST_FAIL, TEST_SUBMIT_REQUEST, TEST_SUBMIT_SUCCESS, TEST_SUBMIT_FAIL, TEST_RESULT_REQUEST, TEST_RESULT_SUCCESS, TEST_RESULT_FAIL, CLEAR_ERRORS } from \"../constants/productConstants\";\nexport const testReducer = (state = {\n  loading: false,\n  tests: [],\n  results: [],\n  error: null\n}, action) => {\n  switch (action.type) {\n    case TEST_REQUEST:\n    case TEST_SUBMIT_REQUEST:\n    case TEST_RESULT_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case TEST_SUBMIT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        results: action.payload,\n        error: null\n      };\n    case TEST_RESULT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        results: action.payload,\n        error: null\n      };\n    case TEST_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        tests: action.payload,\n        error: null\n      };\n    case TEST_FAIL:\n    case TEST_SUBMIT_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["TEST_REQUEST","TEST_SUCCESS","TEST_FAIL","TEST_SUBMIT_REQUEST","TEST_SUBMIT_SUCCESS","TEST_SUBMIT_FAIL","TEST_RESULT_REQUEST","TEST_RESULT_SUCCESS","TEST_RESULT_FAIL","CLEAR_ERRORS","testReducer","state","loading","tests","results","error","action","type","payload"],"sources":["C:/Users/divya/Desktop/Projects/SSBPrep/frontend/my-app/src/reducers/testReducer.js"],"sourcesContent":["import {\r\n  TEST_REQUEST,\r\n  TEST_SUCCESS,\r\n  TEST_FAIL,\r\n  TEST_SUBMIT_REQUEST,\r\n  TEST_SUBMIT_SUCCESS,\r\n  TEST_SUBMIT_FAIL,\r\n  TEST_RESULT_REQUEST,\r\n  TEST_RESULT_SUCCESS,\r\n  TEST_RESULT_FAIL,\r\n  CLEAR_ERRORS,\r\n} from \"../constants/productConstants\";\r\n\r\nexport const testReducer = (\r\n  state = { loading: false, tests: [], results: [], error: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case TEST_REQUEST:\r\n    case TEST_SUBMIT_REQUEST:\r\n    case TEST_RESULT_REQUEST:\r\n      return { ...state, loading: true };\r\n\r\n    case TEST_SUBMIT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        results: action.payload,\r\n        error: null,\r\n      };\r\n\r\n    case TEST_RESULT_SUCCESS:\r\n        return{\r\n            ...state,\r\n            loading:false,\r\n            results:action.payload,\r\n            error:null\r\n        };\r\n\r\n        \r\n    case TEST_SUCCESS:\r\n      return { ...state, loading: false, tests: action.payload, error: null };\r\n\r\n    case TEST_FAIL:\r\n    case TEST_SUBMIT_FAIL:\r\n      return { ...state, loading: false, error: action.payload };\r\n\r\n    case CLEAR_ERRORS:\r\n      return { ...state, error: null };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"],"mappings":"AAAA,SACEA,YAAY,EACZC,YAAY,EACZC,SAAS,EACTC,mBAAmB,EACnBC,mBAAmB,EACnBC,gBAAgB,EAChBC,mBAAmB,EACnBC,mBAAmB,EACnBC,gBAAgB,EAChBC,YAAY,QACP,+BAA+B;AAEtC,OAAO,MAAMC,WAAW,GAAGA,CACzBC,KAAK,GAAG;EAAEC,OAAO,EAAE,KAAK;EAAEC,KAAK,EAAE,EAAE;EAAEC,OAAO,EAAE,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,EAC/DC,MAAM,KACH;EACH,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKjB,YAAY;IACjB,KAAKG,mBAAmB;IACxB,KAAKG,mBAAmB;MACtB,OAAO;QAAE,GAAGK,KAAK;QAAEC,OAAO,EAAE;MAAK,CAAC;IAEpC,KAAKR,mBAAmB;MACtB,OAAO;QACL,GAAGO,KAAK;QACRC,OAAO,EAAE,KAAK;QACdE,OAAO,EAAEE,MAAM,CAACE,OAAO;QACvBH,KAAK,EAAE;MACT,CAAC;IAEH,KAAKR,mBAAmB;MACpB,OAAM;QACF,GAAGI,KAAK;QACRC,OAAO,EAAC,KAAK;QACbE,OAAO,EAACE,MAAM,CAACE,OAAO;QACtBH,KAAK,EAAC;MACV,CAAC;IAGL,KAAKd,YAAY;MACf,OAAO;QAAE,GAAGU,KAAK;QAAEC,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEG,MAAM,CAACE,OAAO;QAAEH,KAAK,EAAE;MAAK,CAAC;IAEzE,KAAKb,SAAS;IACd,KAAKG,gBAAgB;MACnB,OAAO;QAAE,GAAGM,KAAK;QAAEC,OAAO,EAAE,KAAK;QAAEG,KAAK,EAAEC,MAAM,CAACE;MAAQ,CAAC;IAE5D,KAAKT,YAAY;MACf,OAAO;QAAE,GAAGE,KAAK;QAAEI,KAAK,EAAE;MAAK,CAAC;IAElC;MACE,OAAOJ,KAAK;EAChB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}