{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\Desktop\\\\Projects\\\\SSBPrep\\\\frontend\\\\my-app\\\\src\\\\components\\\\newPassword.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { resetPassword } from \"../actions/userActions\";\nimport { CLEAR_ERRORS } from \"../constants/userConstants\";\nimport MetaData from \"./layouts/MetaData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewPassword = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    token\n  } = useParams();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const {\n    loading,\n    success,\n    error\n  } = useSelector(state => state.resetPassword);\n  const [alert, setAlert] = useState({\n    type: \"\",\n    message: \"\"\n  });\n  const submitHandler = e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setAlert({\n        type: \"danger\",\n        message: \"Passwords do not match!\"\n      });\n      setTimeout(() => setAlert({\n        type: \"\",\n        message: \"\"\n      }), 3000);\n      return;\n    }\n    dispatch(resetPassword(token, {\n      password,\n      confirmPassword\n    }));\n  };\n  useEffect(() => {\n    if (success) {\n      setAlert({\n        type: \"success\",\n        message: \"Password updated successfully!\"\n      });\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      setTimeout(() => {\n        dispatch({\n          type: CLEAR_ERRORS\n        });\n        setAlert({\n          type: \"\",\n          message: \"\"\n        });\n      }, 3000);\n    }\n    if (error) {\n      setAlert({\n        type: \"danger\",\n        message: error\n      });\n      setTimeout(() => {\n        dispatch({\n          type: CLEAR_ERRORS\n        });\n        setAlert({\n          type: \"\",\n          message: \"\"\n        });\n      }, 3000);\n    }\n  }, [success, error, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card p-4 shadow\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-center\",\n              children: \"Reset Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), alert.message && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `alert alert-${alert.type} alert-dismissible fade show`,\n              role: \"alert\",\n              children: [alert.message, /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn-close\",\n                \"data-bs-dismiss\": \"alert\",\n                \"aria-label\": \"Close\",\n                onClick: () => setAlert({\n                  type: \"\",\n                  message: \"\"\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: submitHandler,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  placeholder: \"Enter your new password\",\n                  value: password,\n                  onChange: e => setPassword(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  placeholder: \"Confirm your new password\",\n                  value: confirmPassword,\n                  onChange: e => setConfirmPassword(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-grid\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary\",\n                  disabled: loading,\n                  children: loading ? \"Updating...\" : \"Reset Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(NewPassword, \"D1BS/G9OSlkZEU9v8gzbHh4rxLk=\", false, function () {\n  return [useDispatch, useParams, useSelector];\n});\n_c = NewPassword;\nexport default NewPassword;\nvar _c;\n$RefreshReg$(_c, \"NewPassword\");","map":{"version":3,"names":["React","Fragment","useState","useEffect","useDispatch","useSelector","useParams","resetPassword","CLEAR_ERRORS","MetaData","jsxDEV","_jsxDEV","NewPassword","_s","dispatch","token","password","setPassword","confirmPassword","setConfirmPassword","loading","success","error","state","alert","setAlert","type","message","submitHandler","e","preventDefault","setTimeout","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","role","onClick","onSubmit","placeholder","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/divya/Desktop/Projects/SSBPrep/frontend/my-app/src/components/newPassword.js"],"sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { resetPassword } from \"../actions/userActions\";\r\nimport { CLEAR_ERRORS } from \"../constants/userConstants\";\r\nimport MetaData from \"./layouts/MetaData\";\r\n\r\nconst NewPassword = () => {\r\n  const dispatch = useDispatch();\r\n  const { token } = useParams();\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const { loading, success, error } = useSelector((state) => state.resetPassword);\r\n\r\n  const [alert, setAlert] = useState({ type: \"\", message: \"\" });\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setAlert({ type: \"danger\", message: \"Passwords do not match!\" });\r\n      setTimeout(() => setAlert({ type: \"\", message: \"\" }), 3000);\r\n      return;\r\n    }\r\n\r\n    dispatch(resetPassword(token, { password, confirmPassword }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      setAlert({ type: \"success\", message: \"Password updated successfully!\" });\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n\r\n      setTimeout(() => {\r\n        dispatch({ type: CLEAR_ERRORS });\r\n        setAlert({ type: \"\", message: \"\" });\r\n      }, 3000);\r\n    }\r\n\r\n    if (error) {\r\n      setAlert({ type: \"danger\", message: error });\r\n      setTimeout(() => {\r\n        dispatch({ type: CLEAR_ERRORS });\r\n        setAlert({ type: \"\", message: \"\" });\r\n      }, 3000);\r\n    }\r\n  }, [success, error, dispatch]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={\"Reset Password\"} />\r\n      <div className=\"container mt-4\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"card p-4 shadow\">\r\n              <h2 className=\"text-center\">Reset Password</h2>\r\n\r\n              {/* Bootstrap Alert for Success or Error */}\r\n              {alert.message && (\r\n                <div\r\n                  className={`alert alert-${alert.type} alert-dismissible fade show`}\r\n                  role=\"alert\"\r\n                >\r\n                  {alert.message}\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn-close\"\r\n                    data-bs-dismiss=\"alert\"\r\n                    aria-label=\"Close\"\r\n                    onClick={() => setAlert({ type: \"\", message: \"\" })}\r\n                  ></button>\r\n                </div>\r\n              )}\r\n\r\n              <form onSubmit={submitHandler}>\r\n                <div className=\"mb-3\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter your new password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Confirm your new password\"\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"d-grid\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\r\n                    {loading ? \"Updating...\" : \"Reset Password\"}\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NewPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}