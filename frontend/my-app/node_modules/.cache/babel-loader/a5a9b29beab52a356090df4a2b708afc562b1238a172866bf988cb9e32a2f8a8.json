{"ast":null,"code":"import axiosInstance from \"../utils/axiosInstance\";\nimport { ALL_USER_REQUEST, ALL_USER_SUCCESS, ALL_USER_FAIL } from \"../constants/adminConstants\";\nimport { CLEAR_ERRORS } from \"../constants/userConstants\";\n\n//Load All Users\nexport const loadAllUsers = () => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_USER_REQUEST\n    });\n    const {\n      data\n    } = await axiosInstance.get(\"/admin/users\");\n    dispatch({\n      type: ALL_USER_SUCCESS,\n      payload: data.users\n    });\n  } catch (error) {\n    var _error$response, _error$response$data;\n    dispatch({\n      type: ALL_USER_FAIL,\n      payload: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error fetching users\"\n    });\n  }\n};\n\n//Update User Role\n\n//Clear Errors\nexport const clearError = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["axiosInstance","ALL_USER_REQUEST","ALL_USER_SUCCESS","ALL_USER_FAIL","CLEAR_ERRORS","loadAllUsers","dispatch","type","data","get","payload","users","error","_error$response","_error$response$data","response","message","clearError"],"sources":["C:/Users/divya/Desktop/Projects/SSBPrep/frontend/my-app/src/actions/adminActions.js"],"sourcesContent":["import axiosInstance from \"../utils/axiosInstance\";\r\nimport{ALL_USER_REQUEST,ALL_USER_SUCCESS,ALL_USER_FAIL} from \"../constants/adminConstants\";\r\nimport { CLEAR_ERRORS } from \"../constants/userConstants\";\r\n\r\n\r\n//Load All Users\r\nexport const loadAllUsers = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: ALL_USER_REQUEST });\r\n        const { data } = await axiosInstance.get(\"/admin/users\");\r\n        dispatch({ type: ALL_USER_SUCCESS, payload: data.users });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_USER_FAIL,\r\n            payload: error.response?.data?.message || \"Error fetching users\",\r\n        });\r\n    }\r\n};\r\n\r\n\r\n//Update User Role\r\n\r\n//Clear Errors\r\nexport const clearError = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};\r\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,wBAAwB;AAClD,SAAOC,gBAAgB,EAACC,gBAAgB,EAACC,aAAa,QAAO,6BAA6B;AAC1F,SAASC,YAAY,QAAQ,4BAA4B;;AAGzD;AACA,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EAClD,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAEN;IAAiB,CAAC,CAAC;IACpC,MAAM;MAAEO;IAAK,CAAC,GAAG,MAAMR,aAAa,CAACS,GAAG,CAAC,cAAc,CAAC;IACxDH,QAAQ,CAAC;MAAEC,IAAI,EAAEL,gBAAgB;MAAEQ,OAAO,EAAEF,IAAI,CAACG;IAAM,CAAC,CAAC;EAC7D,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACZR,QAAQ,CAAC;MACLC,IAAI,EAAEJ,aAAa;MACnBO,OAAO,EAAE,EAAAG,eAAA,GAAAD,KAAK,CAACG,QAAQ,cAAAF,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBL,IAAI,cAAAM,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAAI;IAC9C,CAAC,CAAC;EACN;AACJ,CAAC;;AAGD;;AAEA;AACA,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM,MAAOX,QAAQ,IAAK;EAClDA,QAAQ,CAAC;IAAEC,IAAI,EAAEH;EAAa,CAAC,CAAC;AAClC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}