{"ast":null,"code":"import { TEST_REQUEST, TEST_SUCCESS, TEST_FAIL, CLEAR_ERRORS } from \"../constants/productConstants\";\n\n// const initialState = {\n//   loading: false,\n//   tests: [],\n//   error: null,\n// };\n\nexport const testReducer = (state = {\n  loading: false,\n  tests: [],\n  error: null\n}, action) => {\n  console.log(\"ðŸ”„ Reducer Action Received:\", action); // Debug action payload\n\n  switch (action.type) {\n    case TEST_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case TEST_SUCCESS:\n      console.log(\"âœ… Updating Redux State with Tests:\", action.payload); // Check if tests are here\n      return {\n        ...state,\n        loading: false,\n        tests: action.payload,\n        error: null\n      };\n    case TEST_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["TEST_REQUEST","TEST_SUCCESS","TEST_FAIL","CLEAR_ERRORS","testReducer","state","loading","tests","error","action","console","log","type","payload"],"sources":["C:/Users/divya/Desktop/Projects/SSBPrep/frontend/my-app/src/reducers/testReducer.js"],"sourcesContent":["import {\r\n  TEST_REQUEST,\r\n  TEST_SUCCESS,\r\n  TEST_FAIL,\r\n  CLEAR_ERRORS,\r\n} from \"../constants/productConstants\";\r\n\r\n// const initialState = {\r\n//   loading: false,\r\n//   tests: [],\r\n//   error: null,\r\n// };\r\n\r\nexport const testReducer = (state = { loading: false, tests: [], error: null }, action) => {\r\n    console.log(\"ðŸ”„ Reducer Action Received:\", action); // Debug action payload\r\n  \r\n    switch (action.type) {\r\n      case TEST_REQUEST:\r\n        return { ...state, loading: true };\r\n  \r\n      case TEST_SUCCESS:\r\n        console.log(\"âœ… Updating Redux State with Tests:\", action.payload); // Check if tests are here\r\n        return { ...state, loading: false, tests: action.payload, error: null };\r\n  \r\n      case TEST_FAIL:\r\n        return { ...state, loading: false, error: action.payload };\r\n  \r\n      case CLEAR_ERRORS:\r\n        return { ...state, error: null };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  "],"mappings":"AAAA,SACEA,YAAY,EACZC,YAAY,EACZC,SAAS,EACTC,YAAY,QACP,+BAA+B;;AAEtC;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAG;EAAEC,OAAO,EAAE,KAAK;EAAEC,KAAK,EAAE,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,EAAEC,MAAM,KAAK;EACvFC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,MAAM,CAAC,CAAC,CAAC;;EAEpD,QAAQA,MAAM,CAACG,IAAI;IACjB,KAAKZ,YAAY;MACf,OAAO;QAAE,GAAGK,KAAK;QAAEC,OAAO,EAAE;MAAK,CAAC;IAEpC,KAAKL,YAAY;MACfS,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEF,MAAM,CAACI,OAAO,CAAC,CAAC,CAAC;MACnE,OAAO;QAAE,GAAGR,KAAK;QAAEC,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEE,MAAM,CAACI,OAAO;QAAEL,KAAK,EAAE;MAAK,CAAC;IAEzE,KAAKN,SAAS;MACZ,OAAO;QAAE,GAAGG,KAAK;QAAEC,OAAO,EAAE,KAAK;QAAEE,KAAK,EAAEC,MAAM,CAACI;MAAQ,CAAC;IAE5D,KAAKV,YAAY;MACf,OAAO;QAAE,GAAGE,KAAK;QAAEG,KAAK,EAAE;MAAK,CAAC;IAElC;MACE,OAAOH,KAAK;EAChB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}