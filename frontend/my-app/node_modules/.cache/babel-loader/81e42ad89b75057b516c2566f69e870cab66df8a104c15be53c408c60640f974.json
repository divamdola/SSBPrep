{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\Desktop\\\\Projects\\\\SSBPrep\\\\frontend\\\\my-app\\\\src\\\\components\\\\test.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, Fragment, useCallback, useRef } from \"react\";\nimport axiosInstance from \"../utils/axiosInstance\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\";\nimport { getTests } from \"../actions/productActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  var _location$state, _currentTest$question;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    exam,\n    id\n  } = useParams();\n  const {\n    tests,\n    error\n  } = useSelector(state => state.tests);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [currentTest, setCurrentTest] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [isPaused, setIsPaused] = useState(false);\n  const pauseModalRef = useRef(null);\n  const pauseModalInstanceRef = useRef(null);\n  const isResume = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.isResume;\n  const handleSubmit = useCallback(async () => {\n    if (!currentTest || !currentTest.questions) return;\n    const payload = {\n      testId: currentTest._id,\n      answers: currentTest.questions.map((_, idx) => answers[idx] || null),\n      timeTaken: currentTest.timeDuration * 60 - timeLeft\n    };\n    try {\n      const {\n        data\n      } = await axiosInstance.post(`/test/submit/${currentTest._id}`, payload);\n      alert(`✅ Test submitted! Your score: ${data.attempt.score}`);\n      localStorage.removeItem(\"pausedTest\");\n      navigate(\"/\");\n    } catch (error) {\n      var _error$response;\n      console.error(\"❌ Error submitting test:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      alert(\"❌ Something went wrong while submitting the test.\");\n    }\n  }, [answers, currentTest, timeLeft, navigate]);\n  useEffect(() => {\n    if (exam) {\n      dispatch(getTests(exam));\n    }\n  }, [dispatch, exam]);\n  useEffect(() => {\n    const test = tests.find(t => t._id === id);\n    if (test) {\n      setCurrentTest(test);\n\n      // Resume time if test was paused\n      const paused = JSON.parse(localStorage.getItem(\"pausedTest\"));\n      if (isResume && paused !== null && paused !== void 0 && paused.timeLeft) {\n        setTimeLeft(paused.timeLeft);\n        setAnswers(paused.answers || {});\n        setCurrentQuestionIndex(paused.currentQuestionIndex || 0);\n      } else {\n        setTimeLeft(test.timeDuration * 60);\n      }\n\n      // Enter fullscreen\n      const elem = document.documentElement;\n      if (!document.fullscreenElement) {\n        elem.requestFullscreen().catch(err => console.error(\"Failed to enter full screen:\", err));\n      }\n    }\n  }, [tests, id, isResume]);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      var _window$bootstrap;\n      if (pauseModalRef.current && (_window$bootstrap = window.bootstrap) !== null && _window$bootstrap !== void 0 && _window$bootstrap.Modal) {\n        pauseModalInstanceRef.current = new window.bootstrap.Modal(pauseModalRef.current, {\n          backdrop: \"static\",\n          keyboard: false\n        });\n      }\n    }, 200);\n    return () => clearTimeout(timer);\n  }, []);\n  useEffect(() => {\n    const handleFullscreenChange = () => {\n      if (!document.fullscreenElement) {\n        var _pauseModalInstanceRe;\n        setIsPaused(true);\n\n        // Save pause state to localStorage\n        localStorage.setItem(\"pausedTest\", JSON.stringify({\n          testId: currentTest._id,\n          exam,\n          mockTest: window.location.pathname.split(\"/\")[2],\n          timeLeft,\n          answers,\n          currentQuestionIndex\n        }));\n        (_pauseModalInstanceRe = pauseModalInstanceRef.current) === null || _pauseModalInstanceRe === void 0 ? void 0 : _pauseModalInstanceRe.show();\n      }\n    };\n    document.addEventListener(\"fullscreenchange\", handleFullscreenChange);\n    return () => {\n      document.removeEventListener(\"fullscreenchange\", handleFullscreenChange);\n    };\n  }, [timeLeft, answers, currentQuestionIndex, currentTest, exam]);\n  useEffect(() => {\n    if (timeLeft <= 0) {\n      handleSubmit();\n      return;\n    }\n    if (isPaused) return;\n    const timer = setInterval(() => {\n      setTimeLeft(prev => prev - 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft, isPaused, handleSubmit]);\n  const formatTime = seconds => {\n    const h = String(Math.floor(seconds / 3600)).padStart(2, \"0\");\n    const m = String(Math.floor(seconds % 3600 / 60)).padStart(2, \"0\");\n    const s = String(seconds % 60).padStart(2, \"0\");\n    return `${h}:${m}:${s}`;\n  };\n  const handleOptionChange = e => {\n    setAnswers({\n      ...answers,\n      [currentQuestionIndex]: e.target.value\n    });\n  };\n  const handleNext = () => {\n    if (currentQuestionIndex < currentTest.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const handlePrevious = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n  const toggleFullScreen = () => {\n    const elem = document.documentElement;\n    if (!document.fullscreenElement) {\n      elem.requestFullscreen().catch(err => console.error(err));\n    } else {\n      document.exitFullscreen();\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: [\"\\u274C Failed to load test: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 14\n    }, this);\n  }\n  if (!currentTest || !((_currentTest$question = currentTest.questions) !== null && _currentTest$question !== void 0 && _currentTest$question.length)) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading test...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 14\n    }, this);\n  }\n  const question = currentTest.questions[currentQuestionIndex];\n  const selected = answers[currentQuestionIndex] || \"\";\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-body\",\n      children: [isPaused && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resume-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resume-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"resume-text\",\n            children: \"You have paused the test. Resume to continue.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"resume-btn\",\n            onClick: () => {\n              setIsPaused(false);\n              const elem = document.documentElement;\n              if (!document.fullscreenElement) {\n                elem.requestFullscreen().catch(err => console.error(\"Failed to re-enter full screen:\", err));\n              }\n            },\n            children: \"Resume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-head\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-name\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: currentTest.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeleft\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Time left \", formatTime(timeLeft)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"full-button\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"pause-btn\",\n            onClick: e => {\n              var _pauseModalInstanceRe2;\n              e.preventDefault();\n              (_pauseModalInstanceRe2 = pauseModalInstanceRef.current) === null || _pauseModalInstanceRe2 === void 0 ? void 0 : _pauseModalInstanceRe2.show();\n            },\n            children: \"Pause\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"full-btn\",\n            onClick: toggleFullScreen,\n            children: \"Enter Full Screen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ques\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Question No. \", currentQuestionIndex + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-marks\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"correct\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Correct\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"+\", currentTest.marksCorrect]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"incorrect\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Incorrect\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"-\", currentTest.marksWrong]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-question\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: question.questionText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test-options\",\n            children: question.options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: `question-${currentQuestionIndex}`,\n                  value: option,\n                  checked: selected === option,\n                  onChange: handleOptionChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: option\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 21\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-submit\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-save\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePrevious,\n            disabled: currentQuestionIndex === 0,\n            children: \"Previous Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNext,\n            disabled: currentQuestionIndex === currentTest.questions.length - 1,\n            children: \"Save & Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-save\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-btn btn btn-success\",\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade\",\n      id: \"pauseConfirmModal\",\n      tabIndex: \"-1\",\n      \"aria-labelledby\": \"pauseConfirmModalLabel\",\n      \"aria-hidden\": \"true\",\n      ref: pauseModalRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog modal-dialog-centered\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header bg-dark text-dark\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title text-white\",\n              id: \"pauseConfirmModalLabel\",\n              children: \"Pause Test?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close\",\n              style: {\n                filter: \"invert(1)\",\n                opacity: 1\n              },\n              \"data-bs-dismiss\": \"modal\",\n              \"aria-label\": \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: \"Are you sure you want to pause the test? Timer will stop and questions will be hidden.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-light\",\n              \"data-bs-dismiss\": \"modal\",\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-dark\",\n              onClick: () => {\n                var _pauseModalInstanceRe3;\n                setIsPaused(true);\n                (_pauseModalInstanceRe3 = pauseModalInstanceRef.current) === null || _pauseModalInstanceRe3 === void 0 ? void 0 : _pauseModalInstanceRe3.hide();\n                if (document.fullscreenElement) {\n                  document.exitFullscreen();\n                }\n              },\n              children: \"Yes, Pause\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 7\n  }, this);\n};\n_s(Test, \"VbieWBB58B8IDnhW6T0owZjIsoQ=\", false, function () {\n  return [useDispatch, useNavigate, useLocation, useParams, useSelector];\n});\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useEffect","useState","Fragment","useCallback","useRef","axiosInstance","useDispatch","useSelector","useNavigate","useParams","useLocation","getTests","jsxDEV","_jsxDEV","Test","_s","_location$state","_currentTest$question","dispatch","navigate","location","exam","id","tests","error","state","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","currentTest","setCurrentTest","timeLeft","setTimeLeft","isPaused","setIsPaused","pauseModalRef","pauseModalInstanceRef","isResume","handleSubmit","questions","payload","testId","_id","map","_","idx","timeTaken","timeDuration","data","post","alert","attempt","score","localStorage","removeItem","_error$response","console","response","message","test","find","t","paused","JSON","parse","getItem","elem","document","documentElement","fullscreenElement","requestFullscreen","catch","err","timer","setTimeout","_window$bootstrap","current","window","bootstrap","Modal","backdrop","keyboard","clearTimeout","handleFullscreenChange","_pauseModalInstanceRe","setItem","stringify","mockTest","pathname","split","show","addEventListener","removeEventListener","setInterval","prev","clearInterval","formatTime","seconds","h","String","Math","floor","padStart","m","s","handleOptionChange","e","target","value","handleNext","length","handlePrevious","toggleFullScreen","exitFullscreen","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","question","selected","className","onClick","title","_pauseModalInstanceRe2","preventDefault","marksCorrect","marksWrong","questionText","options","option","type","name","checked","onChange","disabled","tabIndex","ref","filter","opacity","_pauseModalInstanceRe3","hide","_c","$RefreshReg$"],"sources":["C:/Users/divya/Desktop/Projects/SSBPrep/frontend/my-app/src/components/test.js"],"sourcesContent":["import React, {\r\n    useEffect,\r\n    useState,\r\n    Fragment,\r\n    useCallback,\r\n    useRef,\r\n  } from \"react\";\r\n  import axiosInstance from \"../utils/axiosInstance\";\r\n  import { useDispatch, useSelector } from \"react-redux\";\r\n  import { useNavigate, useParams, useLocation } from \"react-router-dom\";\r\n  import { getTests } from \"../actions/productActions\";\r\n  \r\n  const Test = () => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const { exam, id } = useParams();\r\n  \r\n    const { tests, error } = useSelector((state) => state.tests);\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [answers, setAnswers] = useState({});\r\n    const [currentTest, setCurrentTest] = useState(null);\r\n    const [timeLeft, setTimeLeft] = useState(0);\r\n    const [isPaused, setIsPaused] = useState(false);\r\n  \r\n    const pauseModalRef = useRef(null);\r\n    const pauseModalInstanceRef = useRef(null);\r\n  \r\n    const isResume = location.state?.isResume;\r\n  \r\n    const handleSubmit = useCallback(async () => {\r\n        if (!currentTest || !currentTest.questions) return;\r\n      \r\n        const payload = {\r\n          testId: currentTest._id,\r\n          answers: currentTest.questions.map((_, idx) => answers[idx] || null),\r\n          timeTaken: (currentTest.timeDuration * 60) - timeLeft,\r\n        };\r\n      \r\n        try {\r\n          const { data } = await axiosInstance.post(`/test/submit/${currentTest._id}`, payload);\r\n      \r\n          alert(`✅ Test submitted! Your score: ${data.attempt.score}`);\r\n          localStorage.removeItem(\"pausedTest\");\r\n          navigate(\"/\");\r\n        } catch (error) {\r\n          console.error(\"❌ Error submitting test:\", error.response?.data || error.message);\r\n          alert(\"❌ Something went wrong while submitting the test.\");\r\n        }\r\n      }, [answers, currentTest, timeLeft, navigate]);\r\n  \r\n    useEffect(() => {\r\n      if (exam) {\r\n        dispatch(getTests(exam));\r\n      }\r\n    }, [dispatch, exam]);\r\n  \r\n    useEffect(() => {\r\n      const test = tests.find((t) => t._id === id);\r\n      if (test) {\r\n        setCurrentTest(test);\r\n  \r\n        // Resume time if test was paused\r\n        const paused = JSON.parse(localStorage.getItem(\"pausedTest\"));\r\n        if (isResume && paused?.timeLeft) {\r\n          setTimeLeft(paused.timeLeft);\r\n          setAnswers(paused.answers || {});\r\n          setCurrentQuestionIndex(paused.currentQuestionIndex || 0);\r\n        } else {\r\n          setTimeLeft(test.timeDuration * 60);\r\n        }\r\n  \r\n        // Enter fullscreen\r\n        const elem = document.documentElement;\r\n        if (!document.fullscreenElement) {\r\n          elem.requestFullscreen().catch((err) =>\r\n            console.error(\"Failed to enter full screen:\", err)\r\n          );\r\n        }\r\n      }\r\n    }, [tests, id, isResume]);\r\n  \r\n    useEffect(() => {\r\n      const timer = setTimeout(() => {\r\n        if (pauseModalRef.current && window.bootstrap?.Modal) {\r\n          pauseModalInstanceRef.current = new window.bootstrap.Modal(\r\n            pauseModalRef.current,\r\n            {\r\n              backdrop: \"static\",\r\n              keyboard: false,\r\n            }\r\n          );\r\n        }\r\n      }, 200);\r\n      return () => clearTimeout(timer);\r\n    }, []);\r\n  \r\n    useEffect(() => {\r\n      const handleFullscreenChange = () => {\r\n        if (!document.fullscreenElement) {\r\n          setIsPaused(true);\r\n  \r\n          // Save pause state to localStorage\r\n          localStorage.setItem(\r\n            \"pausedTest\",\r\n            JSON.stringify({\r\n              testId: currentTest._id,\r\n              exam,\r\n              mockTest: window.location.pathname.split(\"/\")[2],\r\n              timeLeft,\r\n              answers,\r\n              currentQuestionIndex,\r\n            })\r\n          );\r\n  \r\n          pauseModalInstanceRef.current?.show();\r\n        }\r\n      };\r\n  \r\n      document.addEventListener(\"fullscreenchange\", handleFullscreenChange);\r\n      return () => {\r\n        document.removeEventListener(\"fullscreenchange\", handleFullscreenChange);\r\n      };\r\n    }, [timeLeft, answers, currentQuestionIndex, currentTest, exam]);\r\n  \r\n    useEffect(() => {\r\n      if (timeLeft <= 0) {\r\n        handleSubmit();\r\n        return;\r\n      }\r\n  \r\n      if (isPaused) return;\r\n  \r\n      const timer = setInterval(() => {\r\n        setTimeLeft((prev) => prev - 1);\r\n      }, 1000);\r\n  \r\n      return () => clearInterval(timer);\r\n    }, [timeLeft, isPaused, handleSubmit]);\r\n  \r\n    const formatTime = (seconds) => {\r\n      const h = String(Math.floor(seconds / 3600)).padStart(2, \"0\");\r\n      const m = String(Math.floor((seconds % 3600) / 60)).padStart(2, \"0\");\r\n      const s = String(seconds % 60).padStart(2, \"0\");\r\n      return `${h}:${m}:${s}`;\r\n    };\r\n  \r\n    const handleOptionChange = (e) => {\r\n      setAnswers({\r\n        ...answers,\r\n        [currentQuestionIndex]: e.target.value,\r\n      });\r\n    };\r\n  \r\n    const handleNext = () => {\r\n      if (currentQuestionIndex < currentTest.questions.length - 1) {\r\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n      }\r\n    };\r\n  \r\n    const handlePrevious = () => {\r\n      if (currentQuestionIndex > 0) {\r\n        setCurrentQuestionIndex(currentQuestionIndex - 1);\r\n      }\r\n    };\r\n  \r\n    const toggleFullScreen = () => {\r\n      const elem = document.documentElement;\r\n      if (!document.fullscreenElement) {\r\n        elem.requestFullscreen().catch((err) => console.error(err));\r\n      } else {\r\n        document.exitFullscreen();\r\n      }\r\n    };\r\n  \r\n    if (error) {\r\n      return <p style={{ color: \"red\" }}>❌ Failed to load test: {error}</p>;\r\n    }\r\n  \r\n    if (!currentTest || !currentTest.questions?.length) {\r\n      return <p>Loading test...</p>;\r\n    }\r\n  \r\n    const question = currentTest.questions[currentQuestionIndex];\r\n    const selected = answers[currentQuestionIndex] || \"\";\r\n  \r\n    return (\r\n      <Fragment>\r\n        <div className=\"test-body\">\r\n          {isPaused && (\r\n            <div className=\"resume-container\">\r\n              <div className=\"resume-content\">\r\n                <p className=\"resume-text\">\r\n                  You have paused the test. Resume to continue.\r\n                </p>\r\n                <button\r\n                  className=\"resume-btn\"\r\n                  onClick={() => {\r\n                    setIsPaused(false);\r\n                    const elem = document.documentElement;\r\n                    if (!document.fullscreenElement) {\r\n                      elem.requestFullscreen().catch((err) =>\r\n                        console.error(\"Failed to re-enter full screen:\", err)\r\n                      );\r\n                    }\r\n                  }}\r\n                >\r\n                  Resume\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n  \r\n          <div className=\"test-head\">\r\n            <div className=\"test-name\">\r\n              <p>{currentTest.title}</p>\r\n            </div>\r\n            <div className=\"timeleft\">\r\n              <p>Time left {formatTime(timeLeft)}</p>\r\n            </div>\r\n            <div className=\"full-button\">\r\n              <button\r\n                className=\"pause-btn\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  pauseModalInstanceRef.current?.show();\r\n                }}\r\n              >\r\n                Pause\r\n              </button>\r\n  \r\n              <button className=\"full-btn\" onClick={toggleFullScreen}>\r\n                Enter Full Screen\r\n              </button>\r\n            </div>\r\n          </div>\r\n  \r\n          <div className=\"test-content\">\r\n            <div className=\"test-section\">\r\n              <div className=\"ques\">\r\n                <p>Question No. {currentQuestionIndex + 1}</p>\r\n              </div>\r\n              <div className=\"section-marks\">\r\n                <div className=\"correct\">\r\n                  <p>Correct</p>\r\n                  <p>+{currentTest.marksCorrect}</p>\r\n                </div>\r\n                <div className=\"incorrect\">\r\n                  <p>Incorrect</p>\r\n                  <p>-{currentTest.marksWrong}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n  \r\n            <div className=\"test-question\">\r\n              <div className=\"question\">\r\n                <p>{question.questionText}</p>\r\n              </div>\r\n              <div className=\"test-options\">\r\n                {question.options.map((option, idx) => (\r\n                  <div key={idx}>\r\n                    <label>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name={`question-${currentQuestionIndex}`}\r\n                        value={option}\r\n                        checked={selected === option}\r\n                        onChange={handleOptionChange}\r\n                      />\r\n                      <span>{option}</span>\r\n                    </label>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n  \r\n          <div className=\"test-submit\">\r\n            <div className=\"test-save\">\r\n              <button\r\n                onClick={handlePrevious}\r\n                disabled={currentQuestionIndex === 0}\r\n              >\r\n                Previous Question\r\n              </button>\r\n              <button\r\n                onClick={handleNext}\r\n                disabled={\r\n                  currentQuestionIndex === currentTest.questions.length - 1\r\n                }\r\n              >\r\n                Save & Next\r\n              </button>\r\n            </div>\r\n            <div className=\"test-save\">\r\n              <button\r\n                className=\"submit-btn btn btn-success\"\r\n                onClick={handleSubmit}\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  \r\n        {/* Pause Modal */}\r\n        <div\r\n          className=\"modal fade\"\r\n          id=\"pauseConfirmModal\"\r\n          tabIndex=\"-1\"\r\n          aria-labelledby=\"pauseConfirmModalLabel\"\r\n          aria-hidden=\"true\"\r\n          ref={pauseModalRef}\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-centered\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header bg-dark text-dark\">\r\n                <h5 className=\"modal-title text-white\" id=\"pauseConfirmModalLabel\">\r\n                  Pause Test?\r\n                </h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  style={{ filter: \"invert(1)\", opacity: 1 }}\r\n                  data-bs-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                />\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Are you sure you want to pause the test? Timer will stop and\r\n                questions will be hidden.\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-light\"\r\n                  data-bs-dismiss=\"modal\"\r\n                >\r\n                  No\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-dark\"\r\n                  onClick={() => {\r\n                    setIsPaused(true);\r\n                    pauseModalInstanceRef.current?.hide();\r\n                    if (document.fullscreenElement) {\r\n                      document.exitFullscreen();\r\n                    }\r\n                  }}\r\n                >\r\n                  Yes, Pause\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  };\r\n  \r\n  export default Test;\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}