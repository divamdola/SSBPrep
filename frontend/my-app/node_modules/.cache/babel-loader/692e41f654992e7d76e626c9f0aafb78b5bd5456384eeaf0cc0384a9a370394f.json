{"ast":null,"code":"import { ALL_USER_REQUEST, ALL_USER_SUCCESS, ALL_USER_FAIL, UPDATE_USER_SUCCESS, UPDATE_USER_REQUEST, UPDATE_USER_FAIL, UPDATE_PRODUCT_REQUEST, UPDATE_PRODUCT_SUCCESS, UPDATE_PRODUCT_FAIL, UPDATE_PRODUCT_RESET, ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS, ADD_PRODUCT_FAIL } from \"../constants/adminConstants\";\nimport { CLEAR_ERRORS } from \"../constants/userConstants\";\nconst initialState = {\n  users: [],\n  loading: false,\n  error: null,\n  updateSuccess: false\n};\nexport const adminReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ALL_USER_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case UPDATE_USER_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case ADD_PRODUCT_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case ALL_USER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        users: action.payload\n      };\n    case UPDATE_USER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        users: state.users.map(user => user._id === action.payload._id ? action.payload : user)\n      };\n    case ADD_PRODUCT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        success: action.payload\n      };\n    case ALL_USER_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    case UPDATE_USER_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    case ADD_PRODUCT_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    case UPDATE_PRODUCT_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        updateSuccess: false\n      };\n    case UPDATE_PRODUCT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        updateSuccess: true\n      };\n    case UPDATE_PRODUCT_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    case UPDATE_PRODUCT_RESET:\n      return {\n        ...state,\n        loading: false,\n        updateSuccess: false\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["ALL_USER_REQUEST","ALL_USER_SUCCESS","ALL_USER_FAIL","UPDATE_USER_SUCCESS","UPDATE_USER_REQUEST","UPDATE_USER_FAIL","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAIL","UPDATE_PRODUCT_RESET","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAIL","CLEAR_ERRORS","initialState","users","loading","error","updateSuccess","adminReducer","state","action","type","payload","map","user","_id","success"],"sources":["C:/Users/divya/Desktop/Projects/SSBPrep/frontend/my-app/src/reducers/adminReducer.js"],"sourcesContent":["import {\r\n  ALL_USER_REQUEST,\r\n  ALL_USER_SUCCESS,\r\n  ALL_USER_FAIL,\r\n  UPDATE_USER_SUCCESS,\r\n  UPDATE_USER_REQUEST,\r\n  UPDATE_USER_FAIL,\r\n  UPDATE_PRODUCT_REQUEST,\r\n  UPDATE_PRODUCT_SUCCESS,\r\n  UPDATE_PRODUCT_FAIL,\r\n  UPDATE_PRODUCT_RESET,\r\n  ADD_PRODUCT_REQUEST,\r\n  ADD_PRODUCT_SUCCESS,\r\n  ADD_PRODUCT_FAIL,\r\n} from \"../constants/adminConstants\";\r\n\r\nimport { CLEAR_ERRORS } from \"../constants/userConstants\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  loading: false,\r\n  error: null,\r\n  updateSuccess: false,\r\n};\r\n\r\nexport const adminReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ALL_USER_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case UPDATE_USER_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case ADD_PRODUCT_REQUEST:\r\n        return {\r\n            ...state,\r\n            loading: true,\r\n        };\r\n\r\n    case ALL_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        users: action.payload,\r\n      };\r\n\r\n    case UPDATE_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        users: state.users.map((user) =>\r\n          user._id === action.payload._id ? action.payload : user\r\n        ),\r\n      };\r\n\r\n    case ADD_PRODUCT_SUCCESS:\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            success: action.payload,\r\n        };\r\n\r\n    case ALL_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case UPDATE_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ADD_PRODUCT_FAIL:\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.payload,\r\n        };\r\n\r\n    case UPDATE_PRODUCT_REQUEST:\r\n      return { ...state, loading: true, updateSuccess: false };\r\n\r\n    case UPDATE_PRODUCT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updateSuccess: true,\r\n      };\r\n\r\n    case UPDATE_PRODUCT_FAIL:\r\n      return { ...state, loading: false, error: action.payload };\r\n\r\n    case UPDATE_PRODUCT_RESET:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updateSuccess: false,\r\n      };\r\n\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"],"mappings":"AAAA,SACEA,gBAAgB,EAChBC,gBAAgB,EAChBC,aAAa,EACbC,mBAAmB,EACnBC,mBAAmB,EACnBC,gBAAgB,EAChBC,sBAAsB,EACtBC,sBAAsB,EACtBC,mBAAmB,EACnBC,oBAAoB,EACpBC,mBAAmB,EACnBC,mBAAmB,EACnBC,gBAAgB,QACX,6BAA6B;AAEpC,SAASC,YAAY,QAAQ,4BAA4B;AAEzD,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE,IAAI;EACXC,aAAa,EAAE;AACjB,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGA,CAACC,KAAK,GAAGN,YAAY,EAAEO,MAAM,KAAK;EAC5D,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKtB,gBAAgB;MACnB,OAAO;QACL,GAAGoB,KAAK;QACRJ,OAAO,EAAE;MACX,CAAC;IAEH,KAAKZ,mBAAmB;MACtB,OAAO;QACL,GAAGgB,KAAK;QACRJ,OAAO,EAAE;MACX,CAAC;IAEH,KAAKN,mBAAmB;MACpB,OAAO;QACH,GAAGU,KAAK;QACRJ,OAAO,EAAE;MACb,CAAC;IAEL,KAAKf,gBAAgB;MACnB,OAAO;QACL,GAAGmB,KAAK;QACRJ,OAAO,EAAE,KAAK;QACdD,KAAK,EAAEM,MAAM,CAACE;MAChB,CAAC;IAEH,KAAKpB,mBAAmB;MACtB,OAAO;QACL,GAAGiB,KAAK;QACRJ,OAAO,EAAE,KAAK;QACdD,KAAK,EAAEK,KAAK,CAACL,KAAK,CAACS,GAAG,CAAEC,IAAI,IAC1BA,IAAI,CAACC,GAAG,KAAKL,MAAM,CAACE,OAAO,CAACG,GAAG,GAAGL,MAAM,CAACE,OAAO,GAAGE,IACrD;MACF,CAAC;IAEH,KAAKd,mBAAmB;MACpB,OAAO;QACH,GAAGS,KAAK;QACRJ,OAAO,EAAE,KAAK;QACdW,OAAO,EAAEN,MAAM,CAACE;MACpB,CAAC;IAEL,KAAKrB,aAAa;MAChB,OAAO;QACL,GAAGkB,KAAK;QACRJ,OAAO,EAAE,KAAK;QACdC,KAAK,EAAEI,MAAM,CAACE;MAChB,CAAC;IAEH,KAAKlB,gBAAgB;MACnB,OAAO;QACL,GAAGe,KAAK;QACRJ,OAAO,EAAE,KAAK;QACdC,KAAK,EAAEI,MAAM,CAACE;MAChB,CAAC;IAEH,KAAKX,gBAAgB;MACjB,OAAO;QACH,GAAGQ,KAAK;QACRJ,OAAO,EAAE,KAAK;QACdC,KAAK,EAAEI,MAAM,CAACE;MAClB,CAAC;IAEL,KAAKjB,sBAAsB;MACzB,OAAO;QAAE,GAAGc,KAAK;QAAEJ,OAAO,EAAE,IAAI;QAAEE,aAAa,EAAE;MAAM,CAAC;IAE1D,KAAKX,sBAAsB;MACzB,OAAO;QACL,GAAGa,KAAK;QACRJ,OAAO,EAAE,KAAK;QACdE,aAAa,EAAE;MACjB,CAAC;IAEH,KAAKV,mBAAmB;MACtB,OAAO;QAAE,GAAGY,KAAK;QAAEJ,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEI,MAAM,CAACE;MAAQ,CAAC;IAE5D,KAAKd,oBAAoB;MACvB,OAAO;QACL,GAAGW,KAAK;QACRJ,OAAO,EAAE,KAAK;QACdE,aAAa,EAAE;MACjB,CAAC;IAEH,KAAKL,YAAY;MACf,OAAO;QACL,GAAGO,KAAK;QACRH,KAAK,EAAE;MACT,CAAC;IAEH;MACE,OAAOG,KAAK;EAChB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}