{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\Desktop\\\\Projects\\\\SSBPrep\\\\frontend\\\\my-app\\\\src\\\\components\\\\mockList.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect } from \"react\";\nimport { useLocation, useParams, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTests } from \"../actions/productActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MockList = () => {\n  _s();\n  var _location$state, _location$state2;\n  const location = useLocation();\n  const {\n    exam,\n    mockTest\n  } = useParams();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const selectedExam = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.selectedExam) || exam;\n  const selectedMockTest = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.selectedMockTest) || mockTest;\n  const {\n    tests,\n    loading,\n    error\n  } = useSelector(state => state.tests);\n  const pausedTest = JSON.parse(localStorage.getItem(\"pausedTest\"));\n  useEffect(() => {\n    if (selectedExam) {\n      dispatch(getTests(selectedExam));\n    }\n  }, [dispatch, selectedExam]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"head-home mock-test\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: (selectedMockTest === null || selectedMockTest === void 0 ? void 0 : selectedMockTest.toLowerCase()) === \"dpp\" ? `${selectedExam} - Daily Practice Papers` : `${selectedExam} - Full Mock Tests`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading tests...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mocks\",\n      children: tests.length > 0 ? tests.map(test => {\n        const isPausedTest = (pausedTest === null || pausedTest === void 0 ? void 0 : pausedTest.testId) === test._id && (pausedTest === null || pausedTest === void 0 ? void 0 : pausedTest.exam) === selectedExam && (pausedTest === null || pausedTest === void 0 ? void 0 : pausedTest.mockTest) === selectedMockTest;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mock-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: test.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (isPausedTest) {\n                localStorage.removeItem(\"pausedTest\");\n              }\n              navigate(`/${selectedExam}/${selectedMockTest}/test/${test._id}`, {\n                state: {\n                  selectedTest: selectedExam,\n                  test,\n                  isResume: isPausedTest\n                }\n              });\n            },\n            children: isPausedTest ? \"Resume Test\" : \"Start Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 19\n          }, this)]\n        }, test._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tests found for this exam.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(MockList, \"TxXYHjm42ECFoarszXgmmpcgPps=\", false, function () {\n  return [useLocation, useParams, useDispatch, useNavigate, useSelector];\n});\n_c = MockList;\nexport default MockList;\nvar _c;\n$RefreshReg$(_c, \"MockList\");","map":{"version":3,"names":["React","Fragment","useEffect","useLocation","useParams","useNavigate","useDispatch","useSelector","getTests","jsxDEV","_jsxDEV","MockList","_s","_location$state","_location$state2","location","exam","mockTest","dispatch","navigate","selectedExam","state","selectedMockTest","tests","loading","error","pausedTest","JSON","parse","localStorage","getItem","children","className","toLowerCase","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","test","isPausedTest","testId","_id","title","onClick","removeItem","selectedTest","isResume","_c","$RefreshReg$"],"sources":["C:/Users/divya/Desktop/Projects/SSBPrep/frontend/my-app/src/components/mockList.js"],"sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport { useLocation, useParams, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getTests } from \"../actions/productActions\";\r\n\r\nconst MockList = () => {\r\n  const location = useLocation();\r\n  const { exam, mockTest } = useParams();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const selectedExam = location.state?.selectedExam || exam;\r\n  const selectedMockTest = location.state?.selectedMockTest || mockTest;\r\n\r\n  const { tests, loading, error } = useSelector((state) => state.tests);\r\n\r\n  const pausedTest = JSON.parse(localStorage.getItem(\"pausedTest\"));\r\n\r\n  useEffect(() => {\r\n    if (selectedExam) {\r\n      dispatch(getTests(selectedExam));\r\n    }\r\n  }, [dispatch, selectedExam]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"head-home mock-test\">\r\n        <h1>\r\n          {selectedMockTest?.toLowerCase() === \"dpp\"\r\n            ? `${selectedExam} - Daily Practice Papers`\r\n            : `${selectedExam} - Full Mock Tests`}\r\n        </h1>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <p>Loading tests...</p>\r\n      ) : error ? (\r\n        <p style={{ color: \"red\" }}>{error}</p>\r\n      ) : (\r\n        <div className=\"mocks\">\r\n          {tests.length > 0 ? (\r\n            tests.map((test) => {\r\n              const isPausedTest =\r\n                pausedTest?.testId === test._id &&\r\n                pausedTest?.exam === selectedExam &&\r\n                pausedTest?.mockTest === selectedMockTest;\r\n\r\n              return (\r\n                <div className=\"mock-container\" key={test._id}>\r\n                  <p>{test.title}</p>\r\n                  <button\r\n                    onClick={() => {\r\n                      if (isPausedTest) {\r\n                        localStorage.removeItem(\"pausedTest\");\r\n                      }\r\n\r\n                      navigate(\r\n                        `/${selectedExam}/${selectedMockTest}/test/${test._id}`,\r\n                        {\r\n                          state: {\r\n                            selectedTest: selectedExam,\r\n                            test,\r\n                            isResume: isPausedTest,\r\n                          },\r\n                        }\r\n                      );\r\n                    }}\r\n                  >\r\n                    {isPausedTest ? \"Resume Test\" : \"Start Test\"}\r\n                  </button>\r\n                </div>\r\n              );\r\n            })\r\n          ) : (\r\n            <p>No tests found for this exam.</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MockList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}