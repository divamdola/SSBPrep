{"ast":null,"code":"import axiosInstance from \"../utils/axiosInstance\";\nimport { ALL_USER_REQUEST, ALL_USER_SUCCESS, ALL_USER_FAIL, UPDATE_PRODUCT_REQUEST, UPDATE_PRODUCT_SUCCESS, UPDATE_PRODUCT_FAIL, UPDATE_USER_SUCCESS, UPDATE_USER_REQUEST, UPDATE_USER_FAIL, ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS, ADD_PRODUCT_FAIL } from \"../constants/adminConstants\";\nimport { CLEAR_ERRORS } from \"../constants/userConstants\";\n\n//Load All Users\nexport const loadAllUsers = () => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_USER_REQUEST\n    });\n    const {\n      data\n    } = await axiosInstance.get(\"/admin/users\");\n    dispatch({\n      type: ALL_USER_SUCCESS,\n      payload: data.users\n    });\n  } catch (error) {\n    var _error$response, _error$response$data;\n    dispatch({\n      type: ALL_USER_FAIL,\n      payload: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error fetching users\"\n    });\n  }\n};\n\n//Add Product (Books)\nexport const addProduct = productData = async dispatch => {\n  try {\n    dispatch({\n      type: ADD_PRODUCT_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axiosInstance.post('/admin/product/new', {\n      productData\n    }, config);\n    dispatch({\n      type: ADD_PRODUCT_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    dispatch({\n      type: ADD_PRODUCT_FAIL,\n      payload: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Error adding Books\"\n    });\n  }\n};\n\n//Update User Role\nexport const updateUserRole = (userId, role) => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_USER_REQUEST\n    });\n    const {\n      data\n    } = await axiosInstance.put(`/admin/user/${userId}`, {\n      role\n    });\n    dispatch({\n      type: UPDATE_USER_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    dispatch({\n      type: UPDATE_USER_FAIL,\n      payload: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Error updating user role\"\n    });\n  }\n};\n\n//Delete User\nexport const deleteUser = userId => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_USER_REQUEST\n    });\n    await axiosInstance.delete(`/admin/user/${userId}`);\n    dispatch(loadAllUsers());\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    dispatch({\n      type: UPDATE_USER_FAIL,\n      payload: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || \"Error deleting user\"\n    });\n  }\n};\n\n//Update Product\nexport const updateProduct = (productId, productData) => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_PRODUCT_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axiosInstance.put(`/admin/product/${productId}`, productData, config);\n    dispatch({\n      type: UPDATE_PRODUCT_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n    dispatch({\n      type: UPDATE_PRODUCT_FAIL,\n      payload: ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || \"Error updating product\"\n    });\n  }\n};\n\n//Clear Errors\nexport const clearError = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["axiosInstance","ALL_USER_REQUEST","ALL_USER_SUCCESS","ALL_USER_FAIL","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAIL","UPDATE_USER_SUCCESS","UPDATE_USER_REQUEST","UPDATE_USER_FAIL","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAIL","CLEAR_ERRORS","loadAllUsers","dispatch","type","data","get","payload","users","error","_error$response","_error$response$data","response","message","addProduct","productData","config","headers","post","product","_error$response2","_error$response2$data","updateUserRole","userId","role","put","user","_error$response3","_error$response3$data","deleteUser","delete","_error$response4","_error$response4$data","updateProduct","productId","_error$response5","_error$response5$data","clearError"],"sources":["C:/Users/divya/Desktop/Projects/SSBPrep/frontend/my-app/src/actions/adminActions.js"],"sourcesContent":["import axiosInstance from \"../utils/axiosInstance\";\r\nimport {\r\n  ALL_USER_REQUEST,\r\n  ALL_USER_SUCCESS,\r\n  ALL_USER_FAIL,\r\n  UPDATE_PRODUCT_REQUEST,\r\n  UPDATE_PRODUCT_SUCCESS,\r\n  UPDATE_PRODUCT_FAIL,\r\n  UPDATE_USER_SUCCESS,\r\n  UPDATE_USER_REQUEST,\r\n  UPDATE_USER_FAIL,\r\n    ADD_PRODUCT_REQUEST,\r\n    ADD_PRODUCT_SUCCESS,\r\n    ADD_PRODUCT_FAIL,\r\n} from \"../constants/adminConstants\";\r\nimport { CLEAR_ERRORS } from \"../constants/userConstants\";\r\n\r\n//Load All Users\r\nexport const loadAllUsers = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ALL_USER_REQUEST });\r\n    const { data } = await axiosInstance.get(\"/admin/users\");\r\n    dispatch({ type: ALL_USER_SUCCESS, payload: data.users });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ALL_USER_FAIL,\r\n      payload: error.response?.data?.message || \"Error fetching users\",\r\n    });\r\n  }\r\n};\r\n\r\n//Add Product (Books)\r\nexport const addProduct=(productData)=async(dispatch)=>{\r\n    try{\r\n        dispatch({type:ADD_PRODUCT_REQUEST});\r\n        const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n        const {data}=await axiosInstance.post('/admin/product/new',{productData},config);\r\n        dispatch({type:ADD_PRODUCT_SUCCESS,payload:data.product});\r\n    }catch(error){\r\n        dispatch({\r\n            type:ADD_PRODUCT_FAIL,\r\n            payload:error.response?.data?.message || \"Error adding Books\",\r\n        });\r\n    }\r\n}\r\n\r\n//Update User Role\r\nexport const updateUserRole = (userId, role) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: UPDATE_USER_REQUEST });\r\n\r\n    const { data } = await axiosInstance.put(`/admin/user/${userId}`, { role });\r\n\r\n    dispatch({ type: UPDATE_USER_SUCCESS, payload: data.user });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_USER_FAIL,\r\n      payload: error.response?.data?.message || \"Error updating user role\",\r\n    });\r\n  }\r\n};\r\n\r\n//Delete User\r\nexport const deleteUser = (userId) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: UPDATE_USER_REQUEST });\r\n\r\n    await axiosInstance.delete(`/admin/user/${userId}`);\r\n\r\n    dispatch(loadAllUsers());\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_USER_FAIL,\r\n      payload: error.response?.data?.message || \"Error deleting user\",\r\n    });\r\n  }\r\n};\r\n\r\n//Update Product\r\nexport const updateProduct = (productId, productData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: UPDATE_PRODUCT_REQUEST });\r\n\r\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n\r\n    const { data } = await axiosInstance.put(`/admin/product/${productId}`, productData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PRODUCT_SUCCESS,\r\n      payload: data.product,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_PRODUCT_FAIL,\r\n      payload: error.response?.data?.message || \"Error updating product\",\r\n    });\r\n  }\r\n};\r\n\r\n//Clear Errors\r\nexport const clearError = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}