{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\Desktop\\\\Projects\\\\SSBPrep\\\\frontend\\\\my-app\\\\src\\\\components\\\\test.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, Fragment, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { getTests } from \"../actions/productActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    exam,\n    id\n  } = useParams();\n  const {\n    tests,\n    error\n  } = useSelector(state => state.tests);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [currentTest, setCurrentTest] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(0);\n  const handleSubmit = useCallback(() => {\n    if (!currentTest || !currentTest.questions) return;\n    let score = 0;\n    currentTest.questions.forEach((q, idx) => {\n      if (answers[idx] === q.answer) {\n        score += currentTest.marksCorrect;\n      } else if (answers[idx]) {\n        score -= currentTest.marksWrong;\n      }\n    });\n    alert(`Test submitted! Your score: ${score}`);\n    navigate(\"/\");\n  }, [answers, currentTest, navigate]);\n\n  // Fetch tests for this exam\n  useEffect(() => {\n    if (exam) {\n      dispatch(getTests(exam));\n    }\n  }, [dispatch, exam]);\n\n  // Once tests are loaded, find the current test by ID\n  useEffect(() => {\n    const test = tests.find(t => t._id === id);\n    if (test) {\n      setCurrentTest(test);\n      setTimeLeft(test.timeDuration * 60); // convert minutes to seconds\n    }\n  }, [tests, id]);\n\n  // Countdown timer\n  useEffect(() => {\n    if (timeLeft <= 0) {\n      handleSubmit();\n      return;\n    }\n    const timer = setInterval(() => {\n      setTimeLeft(prev => prev - 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft, handleSubmit]);\n  const formatTime = seconds => {\n    const h = String(Math.floor(seconds / 3600)).padStart(2, \"0\");\n    const m = String(Math.floor(seconds % 3600 / 60)).padStart(2, \"0\");\n    const s = String(seconds % 60).padStart(2, \"0\");\n    return `${h}:${m}:${s}`;\n  };\n  const handleOptionChange = e => {\n    setAnswers({\n      ...answers,\n      [currentQuestionIndex]: e.target.value\n    });\n  };\n  const handleNext = () => {\n    if (!currentTest || !currentTest.questions) return;\n    if (currentQuestionIndex < currentTest.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const handlePrevious = () => {\n    if (!currentTest || !currentTest.questions) return;\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n  const toggleFullScreen = () => {\n    const elem = document.documentElement;\n    if (!document.fullscreenElement) {\n      elem.requestFullscreen().catch(err => console.error(err));\n    } else {\n      document.exitFullscreen();\n    }\n  };\n\n  // Handle loading and error states\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: [\"\\u274C Failed to load test: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 12\n    }, this);\n  }\n  if (!currentTest || !currentTest.questions || currentTest.questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading test...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 12\n    }, this);\n  }\n  const question = currentTest.questions[currentQuestionIndex];\n  const selected = answers[currentQuestionIndex] || \"\";\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resume-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resume-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"resume-text\",\n            children: \"You have paused the test, resume your test to keep going!!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"resume-btn\",\n            children: \"Resume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-head\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-name\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: currentTest.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeleft\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Time left \", formatTime(timeLeft)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"full-button\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"pause-btn\",\n            children: \"Pause\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"full-btn\",\n            onClick: toggleFullScreen,\n            children: \"Enter Full Screen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ques\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Question No. \", currentQuestionIndex + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-marks\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"correct\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Correct\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"+\", currentTest.marksCorrect]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"incorrect\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Incorrect\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"-\", currentTest.marksWrong]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-question\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: question.questionText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test-options\",\n            children: question.options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: `question-${currentQuestionIndex}`,\n                  value: option,\n                  checked: selected === option,\n                  onChange: handleOptionChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: option\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-submit\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-save\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePrevious,\n            disabled: currentQuestionIndex === 0,\n            children: \"Previous Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNext,\n            disabled: currentQuestionIndex === currentTest.questions.length - 1,\n            children: \"Save & Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-save\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-btn\",\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"9VQ2FwQB/uRglP5vHQ9VRugyAgU=\", false, function () {\n  return [useDispatch, useNavigate, useParams, useSelector];\n});\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useEffect","useState","Fragment","useCallback","useDispatch","useSelector","useNavigate","useParams","getTests","jsxDEV","_jsxDEV","Test","_s","dispatch","navigate","exam","id","tests","error","state","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","currentTest","setCurrentTest","timeLeft","setTimeLeft","handleSubmit","questions","score","forEach","q","idx","answer","marksCorrect","marksWrong","alert","test","find","t","_id","timeDuration","timer","setInterval","prev","clearInterval","formatTime","seconds","h","String","Math","floor","padStart","m","s","handleOptionChange","e","target","value","handleNext","length","handlePrevious","toggleFullScreen","elem","document","documentElement","fullscreenElement","requestFullscreen","catch","err","console","exitFullscreen","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","question","selected","className","title","onClick","questionText","options","map","option","type","name","checked","onChange","disabled","_c","$RefreshReg$"],"sources":["C:/Users/divya/Desktop/Projects/SSBPrep/frontend/my-app/src/components/test.js"],"sourcesContent":["import React, { useEffect, useState, Fragment, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { getTests } from \"../actions/productActions\";\r\n\r\nconst Test = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { exam, id } = useParams();\r\n\r\n  const { tests, error } = useSelector((state) => state.tests);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [answers, setAnswers] = useState({});\r\n  const [currentTest, setCurrentTest] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(0);\r\n\r\n  const handleSubmit = useCallback(() => {\r\n    if (!currentTest || !currentTest.questions) return;\r\n\r\n    let score = 0;\r\n    currentTest.questions.forEach((q, idx) => {\r\n      if (answers[idx] === q.answer) {\r\n        score += currentTest.marksCorrect;\r\n      } else if (answers[idx]) {\r\n        score -= currentTest.marksWrong;\r\n      }\r\n    });\r\n\r\n    alert(`Test submitted! Your score: ${score}`);\r\n    navigate(\"/\");\r\n  }, [answers, currentTest, navigate]);\r\n\r\n  // Fetch tests for this exam\r\n  useEffect(() => {\r\n    if (exam) {\r\n      dispatch(getTests(exam));\r\n    }\r\n  }, [dispatch, exam]);\r\n\r\n  // Once tests are loaded, find the current test by ID\r\n  useEffect(() => {\r\n    const test = tests.find((t) => t._id === id);\r\n    if (test) {\r\n      setCurrentTest(test);\r\n      setTimeLeft(test.timeDuration * 60); // convert minutes to seconds\r\n    }\r\n  }, [tests, id]);\r\n\r\n  // Countdown timer\r\n  useEffect(() => {\r\n    if (timeLeft <= 0) {\r\n      handleSubmit();\r\n      return;\r\n    }\r\n\r\n    const timer = setInterval(() => {\r\n      setTimeLeft((prev) => prev - 1);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [timeLeft, handleSubmit]);\r\n\r\n  const formatTime = (seconds) => {\r\n    const h = String(Math.floor(seconds / 3600)).padStart(2, \"0\");\r\n    const m = String(Math.floor((seconds % 3600) / 60)).padStart(2, \"0\");\r\n    const s = String(seconds % 60).padStart(2, \"0\");\r\n    return `${h}:${m}:${s}`;\r\n  };\r\n\r\n  const handleOptionChange = (e) => {\r\n    setAnswers({\r\n      ...answers,\r\n      [currentQuestionIndex]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (!currentTest || !currentTest.questions) return;\r\n    if (currentQuestionIndex < currentTest.questions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (!currentTest || !currentTest.questions) return;\r\n    if (currentQuestionIndex > 0) {\r\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\r\n    }\r\n  };\r\n\r\n  const toggleFullScreen = () => {\r\n    const elem = document.documentElement;\r\n    if (!document.fullscreenElement) {\r\n      elem.requestFullscreen().catch((err) => console.error(err));\r\n    } else {\r\n      document.exitFullscreen();\r\n    }\r\n  };\r\n\r\n  // Handle loading and error states\r\n  if (error) {\r\n    return <p style={{ color: \"red\" }}>❌ Failed to load test: {error}</p>;\r\n  }\r\n\r\n  if (\r\n    !currentTest ||\r\n    !currentTest.questions ||\r\n    currentTest.questions.length === 0\r\n  ) {\r\n    return <p>Loading test...</p>;\r\n  }\r\n\r\n  const question = currentTest.questions[currentQuestionIndex];\r\n  const selected = answers[currentQuestionIndex] || \"\";\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"test-body\">\r\n        <div className=\"resume-container\">\r\n          <div className=\"resume-content\">\r\n            <p className=\"resume-text\">\r\n              You have paused the test, resume your test to keep going!!!\r\n            </p>\r\n            <button className=\"resume-btn\">Resume</button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"test-head\">\r\n          <div className=\"test-name\">\r\n            <p>{currentTest.title}</p>\r\n          </div>\r\n          <div className=\"timeleft\">\r\n            <p>Time left {formatTime(timeLeft)}</p>\r\n          </div>\r\n          <div className=\"full-button\">\r\n            <button className=\"pause-btn\">Pause</button>\r\n            <button className=\"full-btn\" onClick={toggleFullScreen}>\r\n              Enter Full Screen\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"test-content\">\r\n          <div className=\"test-section\">\r\n            <div className=\"ques\">\r\n              <p>Question No. {currentQuestionIndex + 1}</p>\r\n            </div>\r\n            <div className=\"section-marks\">\r\n              <div className=\"correct\">\r\n                <p>Correct</p>\r\n                <p>+{currentTest.marksCorrect}</p>\r\n              </div>\r\n              <div className=\"incorrect\">\r\n                <p>Incorrect</p>\r\n                <p>-{currentTest.marksWrong}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"test-question\">\r\n            <div className=\"question\">\r\n              <p>{question.questionText}</p>\r\n            </div>\r\n            <div className=\"test-options\">\r\n              {question.options.map((option, idx) => (\r\n                <div key={idx}>\r\n                  <label>\r\n                    <input\r\n                      type=\"radio\"\r\n                      name={`question-${currentQuestionIndex}`}\r\n                      value={option}\r\n                      checked={selected === option}\r\n                      onChange={handleOptionChange}\r\n                    />\r\n                    <span>{option}</span>\r\n                  </label>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"test-submit\">\r\n          <div className=\"test-save\">\r\n            <button\r\n              onClick={handlePrevious}\r\n              disabled={currentQuestionIndex === 0}\r\n            >\r\n              Previous Question\r\n            </button>\r\n            <button\r\n              onClick={handleNext}\r\n              disabled={\r\n                currentQuestionIndex === currentTest.questions.length - 1\r\n              }\r\n            >\r\n              Save & Next\r\n            </button>\r\n          </div>\r\n          <div className=\"test-save\">\r\n            <button className=\"submit-btn\" onClick={handleSubmit}>\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}