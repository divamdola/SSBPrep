{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\Desktop\\\\Projects\\\\SSBPrep\\\\frontend\\\\my-app\\\\src\\\\components\\\\test.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, Fragment, useCallback, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { getTests } from \"../actions/productActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    exam,\n    id\n  } = useParams();\n  const {\n    tests,\n    error\n  } = useSelector(state => state.tests);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [currentTest, setCurrentTest] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [isPaused, setIsPaused] = useState(false);\n  const pauseModalRef = useRef(null);\n  const pauseModalInstanceRef = useRef(null);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      var _window$bootstrap;\n      if (pauseModalRef.current && (_window$bootstrap = window.bootstrap) !== null && _window$bootstrap !== void 0 && _window$bootstrap.Modal) {\n        pauseModalInstanceRef.current = new window.bootstrap.Modal(pauseModalRef.current, {\n          backdrop: 'static',\n          // Optional: prevent closing by clicking outside\n          keyboard: false // Optional: prevent ESC key closing\n        });\n      }\n    }, 200); // Slight delay ensures modal is in the DOM\n    return () => clearTimeout(timer);\n  }, []);\n  const handleSubmit = useCallback(() => {\n    if (!currentTest || !currentTest.questions) return;\n    let score = 0;\n    currentTest.questions.forEach((q, idx) => {\n      if (answers[idx] === q.answer) {\n        score += currentTest.marksCorrect;\n      } else if (answers[idx]) {\n        score -= currentTest.marksWrong;\n      }\n    });\n    alert(`Test submitted! Your score: ${score}`);\n    navigate(\"/\");\n  }, [answers, currentTest, navigate]);\n  useEffect(() => {\n    if (exam) {\n      dispatch(getTests(exam));\n    }\n  }, [dispatch, exam]);\n  useEffect(() => {\n    const test = tests.find(t => t._id === id);\n    if (test) {\n      setCurrentTest(test);\n      setTimeLeft(test.timeDuration * 60);\n    }\n  }, [tests, id]);\n  useEffect(() => {\n    if (timeLeft <= 0) {\n      handleSubmit();\n      return;\n    }\n    if (isPaused) return;\n    const timer = setInterval(() => {\n      setTimeLeft(prev => prev - 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft, isPaused, handleSubmit]);\n  const formatTime = seconds => {\n    const h = String(Math.floor(seconds / 3600)).padStart(2, \"0\");\n    const m = String(Math.floor(seconds % 3600 / 60)).padStart(2, \"0\");\n    const s = String(seconds % 60).padStart(2, \"0\");\n    return `${h}:${m}:${s}`;\n  };\n  const handleOptionChange = e => {\n    setAnswers({\n      ...answers,\n      [currentQuestionIndex]: e.target.value\n    });\n  };\n  const handleNext = () => {\n    if (!currentTest || !currentTest.questions) return;\n    if (currentQuestionIndex < currentTest.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const handlePrevious = () => {\n    if (!currentTest || !currentTest.questions) return;\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n  const toggleFullScreen = () => {\n    const elem = document.documentElement;\n    if (!document.fullscreenElement) {\n      elem.requestFullscreen().catch(err => console.error(err));\n    } else {\n      document.exitFullscreen();\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: [\"\\u274C Failed to load test: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 12\n    }, this);\n  }\n  if (!currentTest || !currentTest.questions || currentTest.questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading test...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 12\n    }, this);\n  }\n  const question = currentTest.questions[currentQuestionIndex];\n  const selected = answers[currentQuestionIndex] || \"\";\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-body\",\n      children: [isPaused && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resume-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resume-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"resume-text\",\n            children: \"You have paused the test, resume your test to keep going!!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"resume-btn\",\n            onClick: () => setIsPaused(false),\n            children: \"Resume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-head\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-name\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: currentTest.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeleft\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Time left \", formatTime(timeLeft)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"full-button\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"pause-btn\",\n            onClick: e => {\n              var _pauseModalInstanceRe;\n              e.preventDefault();\n              (_pauseModalInstanceRe = pauseModalInstanceRef.current) === null || _pauseModalInstanceRe === void 0 ? void 0 : _pauseModalInstanceRe.show();\n            },\n            children: \"Pause\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"full-btn\",\n            onClick: toggleFullScreen,\n            children: \"Enter Full Screen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ques\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Question No. \", currentQuestionIndex + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-marks\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"correct\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Correct\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"+\", currentTest.marksCorrect]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"incorrect\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Incorrect\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"-\", currentTest.marksWrong]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-question\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: question.questionText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test-options\",\n            children: question.options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: `question-${currentQuestionIndex}`,\n                  value: option,\n                  checked: selected === option,\n                  onChange: handleOptionChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: option\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-submit\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-save\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePrevious,\n            disabled: currentQuestionIndex === 0,\n            children: \"Previous Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNext,\n            disabled: currentQuestionIndex === currentTest.questions.length - 1,\n            children: \"Save & Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-save\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-btn btn btn-success\",\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade\",\n      id: \"pauseConfirmModal\",\n      tabIndex: \"-1\",\n      \"aria-labelledby\": \"pauseConfirmModalLabel\",\n      \"aria-hidden\": \"true\",\n      ref: pauseModalRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog modal-dialog-centered\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header bg-dark text-dark\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title text-white\",\n              id: \"pauseConfirmModalLabel\",\n              children: \"Pause Test?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close text-white\",\n              \"data-bs-dismiss\": \"modal\",\n              \"aria-label\": \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: \"Are you sure you want to pause the test? Timer will stop and questions will be hidden.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"full-btn\",\n              \"data-bs-dismiss\": \"modal\",\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"pause-btn\",\n              onClick: () => {\n                var _pauseModalInstanceRe2;\n                setIsPaused(true);\n                (_pauseModalInstanceRe2 = pauseModalInstanceRef.current) === null || _pauseModalInstanceRe2 === void 0 ? void 0 : _pauseModalInstanceRe2.hide();\n              },\n              children: \"Yes, Pause\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"6BPEVabfapk8ER19N2iLOhNqvqE=\", false, function () {\n  return [useDispatch, useNavigate, useParams, useSelector];\n});\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useEffect","useState","Fragment","useCallback","useRef","useDispatch","useSelector","useNavigate","useParams","getTests","jsxDEV","_jsxDEV","Test","_s","dispatch","navigate","exam","id","tests","error","state","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","currentTest","setCurrentTest","timeLeft","setTimeLeft","isPaused","setIsPaused","pauseModalRef","pauseModalInstanceRef","timer","setTimeout","_window$bootstrap","current","window","bootstrap","Modal","backdrop","keyboard","clearTimeout","handleSubmit","questions","score","forEach","q","idx","answer","marksCorrect","marksWrong","alert","test","find","t","_id","timeDuration","setInterval","prev","clearInterval","formatTime","seconds","h","String","Math","floor","padStart","m","s","handleOptionChange","e","target","value","handleNext","length","handlePrevious","toggleFullScreen","elem","document","documentElement","fullscreenElement","requestFullscreen","catch","err","console","exitFullscreen","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","question","selected","className","onClick","title","_pauseModalInstanceRe","preventDefault","show","questionText","options","map","option","type","name","checked","onChange","disabled","tabIndex","ref","_pauseModalInstanceRe2","hide","_c","$RefreshReg$"],"sources":["C:/Users/divya/Desktop/Projects/SSBPrep/frontend/my-app/src/components/test.js"],"sourcesContent":["import React, {\r\n  useEffect,\r\n  useState,\r\n  Fragment,\r\n  useCallback,\r\n  useRef,\r\n} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { getTests } from \"../actions/productActions\";\r\n\r\nconst Test = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { exam, id } = useParams();\r\n\r\n  const { tests, error } = useSelector((state) => state.tests);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [answers, setAnswers] = useState({});\r\n  const [currentTest, setCurrentTest] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(0);\r\n  const [isPaused, setIsPaused] = useState(false);\r\n\r\n  const pauseModalRef = useRef(null);\r\n  const pauseModalInstanceRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      if (pauseModalRef.current && window.bootstrap?.Modal) {\r\n        pauseModalInstanceRef.current = new window.bootstrap.Modal(pauseModalRef.current, {\r\n          backdrop: 'static', // Optional: prevent closing by clicking outside\r\n          keyboard: false     // Optional: prevent ESC key closing\r\n        });\r\n      }\r\n    }, 200); // Slight delay ensures modal is in the DOM\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n  \r\n\r\n  const handleSubmit = useCallback(() => {\r\n    if (!currentTest || !currentTest.questions) return;\r\n\r\n    let score = 0;\r\n    currentTest.questions.forEach((q, idx) => {\r\n      if (answers[idx] === q.answer) {\r\n        score += currentTest.marksCorrect;\r\n      } else if (answers[idx]) {\r\n        score -= currentTest.marksWrong;\r\n      }\r\n    });\r\n\r\n    alert(`Test submitted! Your score: ${score}`);\r\n    navigate(\"/\");\r\n  }, [answers, currentTest, navigate]);\r\n\r\n  useEffect(() => {\r\n    if (exam) {\r\n      dispatch(getTests(exam));\r\n    }\r\n  }, [dispatch, exam]);\r\n\r\n  useEffect(() => {\r\n    const test = tests.find((t) => t._id === id);\r\n    if (test) {\r\n      setCurrentTest(test);\r\n      setTimeLeft(test.timeDuration * 60);\r\n    }\r\n  }, [tests, id]);\r\n\r\n  useEffect(() => {\r\n    if (timeLeft <= 0) {\r\n      handleSubmit();\r\n      return;\r\n    }\r\n\r\n    if (isPaused) return;\r\n\r\n    const timer = setInterval(() => {\r\n      setTimeLeft((prev) => prev - 1);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [timeLeft, isPaused, handleSubmit]);\r\n\r\n  const formatTime = (seconds) => {\r\n    const h = String(Math.floor(seconds / 3600)).padStart(2, \"0\");\r\n    const m = String(Math.floor((seconds % 3600) / 60)).padStart(2, \"0\");\r\n    const s = String(seconds % 60).padStart(2, \"0\");\r\n    return `${h}:${m}:${s}`;\r\n  };\r\n\r\n  const handleOptionChange = (e) => {\r\n    setAnswers({\r\n      ...answers,\r\n      [currentQuestionIndex]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (!currentTest || !currentTest.questions) return;\r\n    if (currentQuestionIndex < currentTest.questions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (!currentTest || !currentTest.questions) return;\r\n    if (currentQuestionIndex > 0) {\r\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\r\n    }\r\n  };\r\n\r\n  const toggleFullScreen = () => {\r\n    const elem = document.documentElement;\r\n    if (!document.fullscreenElement) {\r\n      elem.requestFullscreen().catch((err) => console.error(err));\r\n    } else {\r\n      document.exitFullscreen();\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    return <p style={{ color: \"red\" }}>❌ Failed to load test: {error}</p>;\r\n  }\r\n\r\n  if (\r\n    !currentTest ||\r\n    !currentTest.questions ||\r\n    currentTest.questions.length === 0\r\n  ) {\r\n    return <p>Loading test...</p>;\r\n  }\r\n\r\n  const question = currentTest.questions[currentQuestionIndex];\r\n  const selected = answers[currentQuestionIndex] || \"\";\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"test-body\">\r\n        {isPaused && (\r\n          <div className=\"resume-container\">\r\n            <div className=\"resume-content\">\r\n              <p className=\"resume-text\">\r\n                You have paused the test, resume your test to keep going!!!\r\n              </p>\r\n              <button className=\"resume-btn\" onClick={() => setIsPaused(false)}>\r\n                Resume\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"test-head\">\r\n          <div className=\"test-name\">\r\n            <p>{currentTest.title}</p>\r\n          </div>\r\n          <div className=\"timeleft\">\r\n            <p>Time left {formatTime(timeLeft)}</p>\r\n          </div>\r\n          <div className=\"full-button\">\r\n            <button\r\n              className=\"pause-btn\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                pauseModalInstanceRef.current?.show();\r\n              }}\r\n            >\r\n              Pause\r\n            </button>\r\n\r\n            <button\r\n              className=\"full-btn\"\r\n              onClick={toggleFullScreen}\r\n            >\r\n              Enter Full Screen\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"test-content\">\r\n          <div className=\"test-section\">\r\n            <div className=\"ques\">\r\n              <p>Question No. {currentQuestionIndex + 1}</p>\r\n            </div>\r\n            <div className=\"section-marks\">\r\n              <div className=\"correct\">\r\n                <p>Correct</p>\r\n                <p>+{currentTest.marksCorrect}</p>\r\n              </div>\r\n              <div className=\"incorrect\">\r\n                <p>Incorrect</p>\r\n                <p>-{currentTest.marksWrong}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"test-question\">\r\n            <div className=\"question\">\r\n              <p>{question.questionText}</p>\r\n            </div>\r\n            <div className=\"test-options\">\r\n              {question.options.map((option, idx) => (\r\n                <div key={idx}>\r\n                  <label>\r\n                    <input\r\n                      type=\"radio\"\r\n                      name={`question-${currentQuestionIndex}`}\r\n                      value={option}\r\n                      checked={selected === option}\r\n                      onChange={handleOptionChange}\r\n                    />\r\n                    <span>{option}</span>\r\n                  </label>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"test-submit\">\r\n          <div className=\"test-save\">\r\n            <button\r\n              onClick={handlePrevious}\r\n              disabled={currentQuestionIndex === 0}\r\n            >\r\n              Previous Question\r\n            </button>\r\n            <button\r\n              onClick={handleNext}\r\n              disabled={\r\n                currentQuestionIndex === currentTest.questions.length - 1\r\n              }\r\n            >\r\n              Save & Next\r\n            </button>\r\n          </div>\r\n          <div className=\"test-save\">\r\n            <button\r\n              className=\"submit-btn btn btn-success\"\r\n              onClick={handleSubmit}\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Pause Confirmation Modal */}\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"pauseConfirmModal\"\r\n        tabIndex=\"-1\"\r\n        aria-labelledby=\"pauseConfirmModalLabel\"\r\n        aria-hidden=\"true\"\r\n        ref={pauseModalRef}\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header bg-dark text-dark\">\r\n              <h5 className=\"modal-title text-white\" id=\"pauseConfirmModalLabel\">\r\n                Pause Test?\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close text-white\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              Are you sure you want to pause the test? Timer will stop and\r\n              questions will be hidden.\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"full-btn\"\r\n                data-bs-dismiss=\"modal\"\r\n              >\r\n                No\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"pause-btn\"\r\n                onClick={() => {\r\n                  setIsPaused(true);\r\n                  pauseModalInstanceRef.current?.hide();\r\n                }}\r\n              >\r\n                Yes, Pause\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}